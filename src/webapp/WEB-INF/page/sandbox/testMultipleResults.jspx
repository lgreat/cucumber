<?xml version="1.0" encoding="UTF-8"?>
<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns="http://www.w3.org/1999/xhtml" version="2.0"
          xmlns:pageHelper="urn:jsptagdir:/WEB-INF/tags/pageHelper"
          xmlns:gsweb="gstaglib"
        >
    <jsp:output doctype-root-element="html"
                doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN"
                doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"/>
    <jsp:directive.page contentType="text/html"/>
    <html xmlns="http://www.w3.org/1999/xhtml" lang="en">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
        <title>Test Modifications to School Search Widget - GreatSchools</title>

        <pageHelper:externalJavascript file="http://maps.google.com/maps/api/js?sensor=false"/>

        <script type="text/javascript">
            function textSwitch(el, target, replace) {
                if (el.value == replace) {
                    el.value = target;
                }
            }

            // http://www.bytemycode.com/snippets/snippet/406/
            String.prototype.escapeHTML = function ()  {
                    return(
                        this.replace(/&amp;/g,'&amp;').
                            replace(/&gt;/g,'&gt;').
                            replace(/&lt;/g,'&lt;').
                            replace(/"/g,'&quot;')
                    );
                };

            // also in customizeSchoolSearchWidget.js
            // http://stackoverflow.com/questions/237104/javascript-array-containsobj
            Array.prototype.contains = function(obj) {
              var i = this.length;
              while (i--) {
                if (this[i] === obj) {
                  return true;
                }
              }
              return false;
            };

            String.prototype.trim = function () {
                return this.replace(/^\s*/, "").replace(/\s*$/, "");
            };

            var waitForGeocode = true;

            function submitSearch() {
                if (!waitForGeocode) {
                    return true;
                }

                document.getElementById('multipleResults').style.display = 'hidden';
                var searchQuery = document.getElementById('searchInput').value;
                searchQuery = searchQuery.trim();
                document.getElementById('searchInput').value = searchQuery;
                if (searchQuery != '' &amp;&amp;
                    searchQuery != 'Enter city &amp; state or zip code') {
                    gsGeocode(searchQuery, function(geocodeResult) {
                        if (geocodeResult != null) {
                            document.getElementById('lat').value = geocodeResult['lat'];
                            document.getElementById('lon').value = geocodeResult['lon'];
//                            document.getElementById('cityName').value = geocodeResult['city'];
                            document.getElementById('state').value = geocodeResult['state'];
                            document.getElementById('locationType').value = geocodeResult['type'];
                            document.getElementById('partialMatch').value = geocodeResult['partial_match'];
//                            document.getElementById('normalizedAddress').value = geocodeResult['normalizedAddress'];

                            waitForGeocode = false;

                            return document.forms['searchForm'].submit();
                        } else {
                            if (document.getElementById('searchInput') != null) {
                                document.getElementById('noResultsSearchQuery').innerHTML = document.getElementById('searchInput').value.escapeHTML();
                            }
                            document.getElementById('noQuery').style.display = 'none';
                            document.getElementById('noResults').style.display = 'block';
                        }
                    });
                } else {
                    document.getElementById('noQuery').style.display = 'block';
                    document.getElementById('noResults').style.display = 'none';
                }

                return false;
            }

            var geocodeResults;
            // also in customizeSchoolSearchWidget.js
            // requires http://maps.google.com/maps/api/js?sensor=false
            function gsGeocode(searchInput, callbackFunction) {
                var geocoder = new google.maps.Geocoder();
                if (geocoder &amp;&amp; searchInput) {
                    geocoder.geocode( { 'address': searchInput + ' US'}, function(results, status) {
                        var numResults = 0;
                        geocodeResults = new Array();
                    if (status == google.maps.GeocoderStatus.OK &amp;&amp; results.length > 0) {
                        numResults = results.length;
                        for (var x = 0; x &lt; numResults; x++) {
                            var geocodeResult = new Array();
                            geocodeResult['lat'] = results[x].geometry.location.lat();
                            geocodeResult['lon'] = results[x].geometry.location.lng();
                            geocodeResult['normalizedAddress'] = results[x].formatted_address.replace(", USA","");
                            geocodeResult['type'] = results[x].types.join();
                            if (results[x].partial_match) {
                                geocodeResult['partial_match'] = true;
                            } else {
                                geocodeResult['partial_match'] = false;
                            }
                            for (var i = 0; i &lt; results[x].address_components.length; i++) {
                                if (results[x].address_components[i].types.contains('administrative_area_level_1')) {
                                    geocodeResult['state'] = results[x].address_components[i].short_name;
                                }
                                if (!('city' in geocodeResult)) {
                                    if (results[x].address_components[i].types.contains('sublocality')) {
                                        geocodeResult['city'] = results[x].address_components[i].short_name;
                                    } else if (results[x].address_components[i].types.contains('locality')) {
                                        geocodeResult['city'] = results[x].address_components[i].short_name;
                                    } else if (results[x].address_components[i].types.contains('administrative_area_level_3')) {
                                        geocodeResult['city'] = results[x].address_components[i].short_name;
                                    }
                                }
                                if (results[x].address_components[i].types.contains('country')) {
                                    geocodeResult['country'] = results[x].address_components[i].short_name;
                                }
                            }
                            // http://stackoverflow.com/questions/1098040/checking-if-an-associative-array-key-exists-in-javascript
                            if (!('lat' in geocodeResult &amp;&amp; 'lon' in geocodeResult &amp;&amp;
                                  'city' in geocodeResult &amp;&amp; 'state' in geocodeResult &amp;&amp;
                                  'normalizedAddress' in geocodeResult &amp;&amp;
                                  'country' in geocodeResult) ||
                                geocodeResult['country'] != 'US') {
                                geocodeResult = null;
                            }
                            if (geocodeResult != null) {
                                geocodeResults.push(geocodeResult);
                            }
                        }
                    }
                        if (geocodeResults.length == 0) {
                            callbackFunction(null);
                        } else if (geocodeResults.length == 1) {
                            if (geocodeResults[0].partial_match) {
                                alert("Found " + geocodeResults[0].normalizedAddress + " which is a " + geocodeResults[0].type + " (partial match).");
                            } else {
                                alert("Found " + geocodeResults[0].normalizedAddress + " which is a " + geocodeResults[0].type + " (exact match).");
                            }
                            callbackFunction(geocodeResults[0]);
                        } else {
                            handleMultipleResults(geocodeResults);
                        }
                  });
                }
            }
            function handleMultipleResults(geocodeResults) {
                document.getElementById('noResults').style.display = 'none';
                var theDiv = document.getElementById('multipleResults');
                var htmlString = "&lt;ul>";
                for (var x=0; x &lt; geocodeResults.length; x++) {
                    htmlString += "&lt;li>Did you mean ";
                    htmlString += '&lt;a href="#" onclick="loadAddress(' + x + '); return false;">';
                    htmlString += geocodeResults[x].normalizedAddress;
                    htmlString += '&lt;/a> (' + geocodeResults[x].type + ')';
                    if (geocodeResults[x].partial_match) {
                        htmlString += ' (partial match)?&lt;/li>';
                    } else {
                        htmlString += ' (exact match)?&lt;/li>';
                    }
                }
                htmlString += "&lt;/ul>";
                theDiv.innerHTML = htmlString;
                theDiv.style.display='block';
            }

            function loadAddress(x) {
                document.getElementById('lat').value = geocodeResults[x]['lat'];
                document.getElementById('lon').value = geocodeResults[x]['lon'];
//                document.getElementById('cityName').value = geocodeResults[x]['city'];
                document.getElementById('state').value = geocodeResults[x]['state'];
                document.getElementById('locationType').value = geocodeResults[x]['type'];
                document.getElementById('partialMatch').value = geocodeResults[x]['partial_match'];
//                document.getElementById('normalizedAddress').value = geocodeResults[x]['normalizedAddress'];

                waitForGeocode = false;

                return document.forms['searchForm'].submit();

            }
        </script>
    </head>
    <body>

    <div id="schoolSearchWidget">

        <h1>Find a School</h1>
        
        <div id="searchTabBody" class="tabBody ${searchTabClass}">

            <h2>By location</h2>

            <p class="warning" id="noQuery">Please enter an address or zip code</p>
            <p class="warning" id="noResults" style="display:none;">No school results found for &amp;quot;<span id="noResultsSearchQuery"><!-- don't collapse --></span>&amp;quot;</p>
            <div id="multipleResults" style="display:none;"><!-- not empty --></div>

            <!--<form name="searchForm" action="/widget/schoolSearch.page" method="post" onsubmit="return submitSearch();">-->
            <form name="searchForm" action="/search/search.page" method="get" onsubmit="return submitSearch();">
                <input type="hidden" name="lat" id="lat"/>
                <input type="hidden" name="lon" id="lon"/>
                <!--<input type="hidden" name="cityName" id="cityName"/>-->
                <input type="hidden" name="state" id="state"/>
                <!--<input type="hidden" name="normalizedAddress" id="normalizedAddress"/>-->
                <input type="hidden" name="distance" value="5"/>
                <input type="hidden" name="locationType" id="locationType" value=""/>
                <input type="hidden" name="partialMatch" id="partialMatch" value=""/>

                <input type="text" name="searchQuery" id="searchInput" class="searchInput"
                            onfocus="textSwitch(this, '', 'Enter city &amp; state or zip code');"
                            onblur="textSwitch(this, 'Enter city &amp; state or zip code', '');"/>
                <button class="button-1 searchSubmit" type="submit">Search</button>
            </form>

            <hr/>

            <h2>By name</h2>

            <p>Search by school or district</p>
            <form name="searchByNameForm" action="/search/search.page" method="get">
                <input type="hidden" name="search_type" value="0"/>

                <input type="text" name="q" class="searchInput"
                            onfocus="textSwitch(this, '', 'Search for school, district, or city');"
                            onblur="textSwitch(this, 'Search for school, district, or city', '');"/>
                <gsweb:stateSelector useNoState="${not requestScope.context.hasSearched}"
                                                 noStateLabel="--"
                                                 usingLongNames="false"
                                                 state="${requestScope.context.state}"
                                                 styleClass="stateSelect"
                                    />
                <button class="button-1 searchSubmit" type="submit">Search</button>
            </form>

        </div>

    </div>

    </body>
    </html>
</jsp:root>
