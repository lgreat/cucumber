<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
        >
    <jsp:directive.attribute name="subjectToYears" type="gs.web.school.test.SubjectToTestValues" required="true"/>
    <jsp:directive.attribute name="state" type="gs.data.state.State" required="true"/>

    <!--
    TODO-13589 / TODO-13610 TEMPORARY ONLY, to limit what data points show up. REMOVE ME WHEN THE FOLLOWING IS DONE:
    Data team needs to deactivate test data sets for older years, or remove these tests from the desktop display target.
    This is how we'll only display the correct number of years of data.
    -->
    <jsp:scriptlet>
    <![CDATA[
        // 3 years only to simulate Perl code, until data team deactivates old test data sets or adjusts display target
        java.util.List testValues = subjectToYears.getTestValues();
        while (testValues.size() > 3) {
            testValues.remove(3);
        }
    ]]>
    </jsp:scriptlet>

    <!-- figure out if there's any data across the several years of test values -->
    <c:set var="hasData" value="${false}"/>
    <c:forEach var="testValue" items="${pageScope.subjectToYears.testValues}" varStatus="loopCount">
        <c:set var="hasData" value="${hasData || testValue.hasData}"/>
    </c:forEach>

    <!-- For our reference, Perl code snippets are copied from www/lib/perl/GS/TestScore/Display/SchoolGrade.pm -->

    <!-- testValue.testScoreLabel is a processed version of testScoreStr.
         For this display type, we don't need any processing, so just use testScoreStr. -->

    <c:choose>
        <c:when test="${pageScope.state eq 'AZ'}">
            <!--
            "az"=>{
                "2010"=>"In SCHOOLYEAR this $lcentity was designated GRADE1 by the Arizona Department of Education. ",
                #"2006"=>"In SCHOOLYEAR this $lcentity was designated GRADE1 by the Arizona Department of Education. ",
                "nograde" => "This $lcentity did not receive a rating in SCHOOLYEAR. ",
                "nogrades_at_all"=>"The Arizona Department of Education did not report AZ LEARNS results for this $lcentity.",
            },
            -->
            <c:set var="withDataMostRecentYearTemplate" value="In [SCHOOL_YEAR], this school was designated [GRADE] by the Arizona Department of Education."/>
            <c:set var="noDataSpecificYearTemplate" value="This school did not receive a rating in [SCHOOL_YEAR]."/>
            <c:set var="noDataAtAllTemplate" value="The Arizona Department of Education did not report AZ LEARNS results for this school."/>
        </c:when>
        <c:when test="${pageScope.state eq 'FL'}">
            <!--
            "fl"=>{
                "2011"=>"This $lcentity was given a grade of GRADE1 by the Florida Department of Education in SCHOOLYEAR. ",
                "2010"=>"In SCHOOLYEAR, this $lcentity received GRADE2.",
                "2009"=>"In SCHOOLYEAR, this $lcentity received GRADE2.",
                "nograde2011" => "This $lcentity did not receive a grade by the Florida Department of Education in SCHOOLYEAR. ",
                "nograde2010" => "This $lcentity did not receive a grade in SCHOOLYEAR. ",
                "nograde2009" => "This $lcentity did not receive a grade in SCHOOLYEAR. ",
                "nogrades_at_all"=>"This $lcentity did not receive a grade in 2008-2009, 2009-2010 or 2010-2011.",
                "lettergrade" => 1,
            },
            -->
            <c:set var="withDataMostRecentYearTemplate" value="This school was given a grade of [GRADE] by the Florida Department of Education in [SCHOOL_YEAR]."/>
            <c:set var="withDataSpecificYearTemplate" value="In [SCHOOL_YEAR], this school received [GRADE]."/>
            <c:set var="noDataMostRecentYearTemplate" value="This school did not receive a grade by the Florida Department of Education in [SCHOOL_YEAR]."/>
            <c:set var="noDataSpecificYearTemplate" value="This school did not receive a grade in [SCHOOL_YEAR]."/>
            <!-- TODO-13610 - Confirm with Ben/PM that this is okay: Perl template hard-coded most recent 3 school years. For simplicity, changed this to most recent school year only. -->
            <c:set var="noDataAtAllTemplate" value="This school did not receive a grade in [MOST_RECENT_SCHOOL_YEAR]."/>
        </c:when>
        <c:when test="${pageScope.state eq 'MI'}">
            <!--
            "mi"=>{
                "2008" => "This school was given a Composite Grade of  GRADE1 by the Michigan Department of Education in SCHOOLYEAR. ",
                "nograde2008" => "This school did not receive a grade in SCHOOLYEAR.",
                "nogrades_at_all"=>"This school did not receive a grade in 2007-2008.",
            },
            -->
            <c:set var="withDataMostRecentYearTemplate" value="This school was given a Composite Grade of [GRADE] by the Michigan Department of Education in [SCHOOL_YEAR]."/>
            <c:set var="noDataSpecificYearTemplate" value="This school did not receive a grade in [SCHOOL_YEAR]."/>
            <c:set var="noDataAtAllTemplate" value="This school did not receive a grade in [MOST_RECENT_SCHOOL_YEAR]."/>
        </c:when>
        <c:when test="${pageScope.state eq 'NC'}">
            <!--
            "nc"=>{
                "2008"=>"This school received the designation of GRADE1 by the North Carolina Department of Public Instruction for the SCHOOLYEAR school year.",
                "2007"=>"In SCHOOLYEAR, this school received the designation of GRADE2.",
                "nograde2008" => "This school was not rated by the North Carolina Department of Public Instruction for the SCHOOLYEAR school year.",
                "nograde2007" => "In SCHOOLYEAR, this school was not rated.",
                "nogrades_at_all"=>"No ABCs data was reported for this $lcentity.",
            },
            -->
            <c:set var="withDataMostRecentYearTemplate" value="This school received the designation of [GRADE] by the North Carolina Department of Public Instruction for the [SCHOOL_YEAR] school year."/>
            <c:set var="withDataSpecificYearTemplate" value="In [SCHOOL_YEAR], this school received the designation of [GRADE]."/>
            <c:set var="noDataMostRecentYearTemplate" value="This school was not rated by the North Carolina Department of Public Instruction for the [SCHOOL_YEAR] school year."/>
            <c:set var="noDataSpecificYearTemplate" value="In [SCHOOL_YEAR], this school was not rated."/>
            <c:set var="noDataAtAllTemplate" value="No ABCs data was reported for this school."/>
        </c:when>
        <c:when test="${pageScope.state eq 'TX'}">
            <!--
            "tx"=>{
                "2011"=>"In SCHOOLYEAR this $lcentity was rated GRADE1 by the Texas Education Agency. ",
                "2010"=>"In SCHOOLYEAR, this $lcentity was rated GRADE2.",
                "2009"=>"In SCHOOLYEAR, this $lcentity was rated GRADE2.",
                "nograde" => "This $lcentity did not receive a rating in SCHOOLYEAR. ",
                "nogrades_at_all"=>"This $lcentity did not receive a rating in 2010-2011.",
            },
            -->
            <c:set var="withDataMostRecentYearTemplate" value="In [SCHOOL_YEAR], this school was rated [GRADE] by the Texas Education Agency."/>
            <c:set var="withDataSpecificYearTemplate" value="In [SCHOOL_YEAR], this school was rated [GRADE]."/>
            <c:set var="noDataSpecificYearTemplate" value="This school did not receive a rating in [SCHOOL_YEAR]."/>
            <c:set var="noDataAtAllTemplate" value="This school did not receive a rating in [MOST_RECENT_SCHOOL_YEAR]."/>
        </c:when>
        <c:when test="${pageScope.state eq 'VA'}">
            <!--
            "va"=>{
                "2010"=>"This $lcentity was rated GRADE1 by the Virginia Department of Education for the SCHOOLYEAR school year. ",
                "2009"=>"In SCHOOLYEAR, this $lcentity was rated as GRADE2.",
                "2008"=>"In SCHOOLYEAR, this $lcentity was rated as GRADE2.",
                "nograde2010" => "No accreditation rating was reported by the Virginia Department of Education for this $lcentity for the SCHOOLYEAR school year.",
                "nograde2009" => "No accreditation rating was reported for this $lcentity for the SCHOOLYEAR school year.",
                "nograde2008" => "No accreditation rating was reported for this $lcentity for the SCHOOLYEAR school year.",
                "nogrades_at_all"=>"No accreditation rating data was reported for this $lcentity.",
            },
            -->
            <c:set var="withDataMostRecentYearTemplate" value="This school was rated [GRADE] by the Virginia Department of Education for the [SCHOOL_YEAR] school year."/>
            <c:set var="withDataSpecificYearTemplate" value="In [SCHOOL_YEAR], this school was rated as [GRADE]."/>
            <c:set var="noDataMostRecentYearTemplate" value="No accreditation rating was reported by the Virginia Department of Education for this school for the [SCHOOL_YEAR] school year."/>
            <c:set var="noDataSpecificYearTemplate" value="No accreditation rating was reported for this school for the [SCHOOL_YEAR] school year."/>
            <c:set var="noDataAtAllTemplate" value="No accreditation rating data was reported for this school."/>
        </c:when>
        <c:otherwise>
            <!-- TODO-13610 get default wording from Ben/PM -->
            <c:set var="withDataMostRecentYearTemplate" value="In [SCHOOL_YEAR], this school was rated [GRADE]."/>
            <c:set var="withDataSpecificYearTemplate" value="In [SCHOOL_YEAR], this school was rated [GRADE]."/>
            <c:set var="noDataSpecificYearTemplate" value="This school did not receive a rating in [SCHOOL_YEAR]."/>
            <c:set var="noDataAtAllTemplate" value="This school did not receive a rating in [MOST_RECENT_SCHOOL_YEAR]."/>
        </c:otherwise>
    </c:choose>

    <!--
    AZ has no: withDataSpecificYearTemplate, noDataMostRecentYearTemplate
    TX has no: noDataMostRecentYearTemplate
    -->

    <!--
    For debugging only:
    <strong>REQUIRED:</strong> withDataMostRecentYearTemplate: ${withDataMostRecentYearTemplate}<br/>
    <strong>OPTIONAL:</strong> withDataSpecificYearTemplate: ${withDataSpecificYearTemplate}<br/>
    <strong>OPTIONAL:</strong> noDataMostRecentYearTemplate: ${noDataMostRecentYearTemplate}<br/>
    <strong>REQUIRED:</strong> noDataSpecificYearTemplate: ${noDataSpecificYearTemplate}<br/>
    <strong>REQUIRED:</strong> noDataAtAllTemplate: ${noDataAtAllTemplate}<br/>
    -->

    <!-- check for required variables -->
    <c:if test="${not empty withDataMostRecentYearTemplate and not empty noDataSpecificYearTemplate and not empty noDataAtAllTemplate}">

        <c:set var="isMultiSentenceWithData" value="${fn:length(pageScope.subjectToYears.testValues) > 1 and hasData}"/>

        <c:if test="${isMultiSentenceWithData}">
            <![CDATA[
                    <ul>
            ]]>
        </c:if>

        <!-- generate and display the output using state-specific templates and values -->
        <c:choose>
            <c:when test="${hasData}">
                <c:forEach var="testValue" items="${pageScope.subjectToYears.testValues}" varStatus="loopCount">
                    <c:set var="schoolYear" value="${testValue.year-1}-${testValue.year}"/>
                    <c:set var="grade"><strong>&amp;quot;${testValue.testScoreStr}&amp;quot;</strong></c:set>
                    <c:set var="isMostRecentYear" value="${loopCount.count eq 1}"/>

                    <c:if test="${isMultiSentenceWithData}">
                        <![CDATA[
                            <li>
                        ]]>
                    </c:if>

                    <c:choose>
                        <c:when test="${testValue.hasData}">
                            <c:choose>
                                <c:when test="${isMostRecentYear}">
                                    ${fn:replace(fn:replace(withDataMostRecentYearTemplate,'[SCHOOL_YEAR]', schoolYear), '[GRADE]', grade)}
                                </c:when>
                                <c:when test="${not empty withDataSpecificYearTemplate}">
                                    ${fn:replace(fn:replace(withDataSpecificYearTemplate,'[SCHOOL_YEAR]', schoolYear), '[GRADE]', grade)}
                                </c:when>
                                <!-- withDataSpecificYearTemplate is optional, so display nothing if it's provided -->
                            </c:choose>
                        </c:when>
                        <c:otherwise>
                            <c:choose>
                                <c:when test="${isMostRecentYear and not empty noDataMostRecentYearTemplate}">
                                    ${fn:replace(noDataMostRecentYearTemplate,'[SCHOOL_YEAR]', schoolYear)}
                                </c:when>
                                <!-- noDataMostRecentYearTemplate is optional, so noDataSpecificYearTemplate is the fallback for most recent year -->
                                <c:otherwise>
                                    ${fn:replace(noDataSpecificYearTemplate,'[SCHOOL_YEAR]', schoolYear)}
                                </c:otherwise>
                            </c:choose>
                        </c:otherwise>
                    </c:choose>

                    <c:if test="${isMultiSentenceWithData}">
                        <![CDATA[
                            </li>
                        ]]>
                    </c:if>
                </c:forEach>
            </c:when>
            <c:otherwise>
                <c:if test="${fn:length(pageScope.subjectToYears.testValues) > 0}">
                    <c:set var="endYear" value="${pageScope.subjectToYears.testValues[0].year}"/>
                    <c:set var="startYear" value="${endYear - 1}"/>
                    <c:set var="mostRecentSchoolYear" value="${startYear}-${endYear}"/>
                    ${fn:replace(noDataAtAllTemplate,'[MOST_RECENT_SCHOOL_YEAR]', mostRecentSchoolYear)}
                </c:if>
            </c:otherwise>
        </c:choose>

        <c:if test="${isMultiSentenceWithData}">
            <![CDATA[
                    </ul>
            ]]>
        </c:if>

    </c:if>

</jsp:root>
