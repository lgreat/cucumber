<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:gsweb="gstaglib"
          xmlns:ad="urn:jsptagdir:/WEB-INF/tags/ad"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:pageHelper="urn:jsptagdir:/WEB-INF/tags/pageHelper"
        >
    <jsp:directive.tag import="gs.data.school.LevelCode"/>
    <jsp:directive.attribute name="isHomePage" required="true"
                             description="To display the appropriate design and copy between the homepage and grade level landing pages and K-5 topic center pages."/>
    <jsp:directive.attribute name="levelCode" required="false" description="To display the appropriate input select in compare module."/>
    <jsp:directive.attribute name="nearbySearchRedirectUrl" required="true" description="URL to redirect to if nearby search validation fails (request URI and query string only, no hostname)"/>
    <jsp:directive.attribute name="adSlotPrefix" required="false" description="To use the appropriate ad slot prefix in compare module."/>
    <pageHelper:externalJavascript file="http://maps.googleapis.com/maps/api/js?client=gme-greatschoolsinc&amp;libraries=geometry&amp;sensor=false&amp;signature=qeUgzsyTsk0gcv93MnxnJ_0SGTw="/>
    <!--
    REQUIREMENT:
    - Any page that includes this tag must call:
    <school:miniStateLauncherHover/>
    -->

    <![CDATA[
    <script type="text/javascript" charset="utf-8">
    <!-- //
        function textSwitch(el, target, replace) {
            if (el.value == replace) {
                el.value = target;
            }
        }

        function findAndCompareCheck(queryId, stateSelectorId, pathwaysId) {
            var returnVal = true;
            var queryVal = document.getElementById(queryId).value;
            var stateVal = document.getElementById(stateSelectorId).value;

            var noSearchTerms = (queryVal == 'Enter school, district, or city');
            var noState = (stateVal == ("-" + "-") || stateVal == "");

            if (noSearchTerms && noState) {
                // show state laumcher hover
                <!--GSType.hover.miniStateLauncher.show();-->
                $("#js-FASChooseState").show();
               returnVal = false;
            } else if (!noSearchTerms && noState) {
                // show javascript alert
                alert("Please select a state.");
                returnVal = false;
            } else if (!noSearchTerms && !noState) {
                // go to search page
                document.getElementById(pathwaysId).value = 'search_single';
                returnVal = true;
            } else if (noSearchTerms && !noState) {
                // go to R and C page
                document.getElementById(pathwaysId).value = 'pathway4';
                returnVal = true;
            }
            return returnVal;
        }

        function formatNormalizedAddress(address) {
            var newAddress = address.replace(", USA", "");
            var zipCodePattern = /(\d\d\d\d\d)-\d\d\d\d/;
            var matches = zipCodePattern.exec(newAddress);
            if (matches && matches.length > 1) {
                newAddress = newAddress.replace(zipCodePattern, matches[1]);
            }
            return newAddress;
        }

        function buildQueryString(queryString) {
            queryString = GS.uri.Uri.removeFromQueryString(queryString, "gradeLevels");
            var gradeLevel = jQuery('#gradeLevels').val();
            if(gradeLevel === '') {
                queryString = GS.uri.Uri.removeFromQueryString(queryString, "gradeLevels");
            }
            else {
                queryString = GS.uri.Uri.putIntoQueryString(queryString, "gradeLevels", gradeLevel, true);
            }

            queryString = GS.uri.Uri.removeFromQueryString(queryString, "st");
            queryString = GS.uri.Uri.putIntoQueryString(queryString, "distance", $('#schoolRange').val(), true);

            return queryString;
        }

        function loadResultsPage() {
            var queryString = $('#jq-findByLocationForm').serialize();
            queryString = buildQueryString(queryString);
            window.location.href = '/search/search.page' + queryString;
        }

        function submitByLocationSearch() {
            var byLocationForm = $('#jq-findByLocationForm');
            var searchQuery = byLocationForm.find('input[name="locationSearchString"]').val();
            searchQuery = searchQuery.replace(/^\s*/, "").replace(/\s*$/, "");

            if (searchQuery != '' && searchQuery.search("^[0-9].*$") !== -1) {
                byLocationForm.find('input[name="locationSearchString"]').val(searchQuery);

                //GS-12100 Since its a by location search, strip the words 'schools' from google geocode searches.
                var searchQueryWithFilteredStopWords = searchQuery;
                if (searchQueryWithFilteredStopWords != '') {
                    searchQueryWithFilteredStopWords = searchQueryWithFilteredStopWords.replace(/schools/g, "");
                }

                gsGeocode(searchQueryWithFilteredStopWords, function(geocodeResult) {
                    if (geocodeResult != null && geocodeResult['zipCode'] == searchQuery) {
                        byLocationForm.find('input[name="lat"]').val(geocodeResult['lat']);
                        byLocationForm.find('input[name="lon"]').val(geocodeResult['lon']);
                        byLocationForm.find('input[name="state"]').val(geocodeResult['state']);
                        byLocationForm.find('input[name="locationType"]').val(geocodeResult['type']);
                        byLocationForm.find('input[name="normalizedAddress"]').val(geocodeResult['normalizedAddress']);
                        byLocationForm.find('input[name="totalResults"]').val(geocodeResult['totalResults']);
                        byLocationForm.find('input[name="city"]').val(geocodeResult['city']);
                        byLocationForm.find('input[name="zipCode"]').val(geocodeResult['zipCode']);

                        window.setTimeout(loadResultsPage, 1);
                    } else {
                        $('#js-invalidZipCode').show();
                    }
                });
            } else {
                $('#js-invalidZipCode').show();
            }

            return false;
        }

        function gsGeocode(searchInput, callbackFunction) {
            var geocoder = new google.maps.Geocoder();
            if (geocoder && searchInput) {
                geocoder.geocode( { 'address': searchInput + ' US'}, function(results, status) {
                var numResults = 0;
                var GS_geocodeResults = new Array();
                if (status == google.maps.GeocoderStatus.OK && results.length > 0) {
                    numResults = results.length;
                    for (var x = 0; x < numResults; x++) {
                        var geocodeResult = new Array();
                        geocodeResult['lat'] = results[x].geometry.location.lat();
                        geocodeResult['lon'] = results[x].geometry.location.lng();
                        geocodeResult['normalizedAddress'] = formatNormalizedAddress(results[x].formatted_address);
                        geocodeResult['type'] = results[x].types.join();
                        if (results[x].partial_match) {
                            geocodeResult['partial_match'] = true;
                        } else {
                            geocodeResult['partial_match'] = false;
                        }
                        for (var i = 0; i < results[x].address_components.length; i++) {
                            if ($.inArray('administrative_area_level_1', results[x].address_components[i].types) > -1) {
                                geocodeResult['state'] = results[x].address_components[i].short_name;
                            }
                            if ($.inArray('country', results[x].address_components[i].types) > -1) {
                                geocodeResult['country'] = results[x].address_components[i].short_name;
                            }
                            if ($.inArray('postal_code', results[x].address_components[i].types) > -1) {
                                geocodeResult['zipCode'] = results[x].address_components[i].short_name;
                            }
                            if ($.inArray('locality', results[x].address_components[i].types) > -1) {
                                geocodeResult['city'] = results[x].address_components[i].long_name;
                            }
                        }
                        // http://stackoverflow.com/questions/1098040/checking-if-an-associative-array-key-exists-in-javascript
                        if (!('lat' in geocodeResult && 'lon' in geocodeResult &&
                                'state' in geocodeResult &&
                                'normalizedAddress' in geocodeResult &&
                                'country' in geocodeResult) ||
                            geocodeResult['country'] != 'US') {
                            geocodeResult = null;
                        }
                        if (geocodeResult != null) {
                            GS_geocodeResults.push(geocodeResult);
                        }
                    }
                }
                if (GS_geocodeResults.length == 0) {
                    callbackFunction(null);
                } else if (GS_geocodeResults.length == 1) {
                    GS_geocodeResults[0]['totalResults'] = 1;
                    callbackFunction(GS_geocodeResults[0]);
                } else {
                    // ignore multiple results for now
                    GS_geocodeResults[0]['totalResults'] = GS_geocodeResults.length;
                    callbackFunction(GS_geocodeResults[0]);
                }
                });
            }
        }

        // -->
    </script>
    ]]>

    <div class="mod findCompare">
        <div class="inner">
            <c:if test="${isHomePage}">
                <div id="fc-bigArrow-f4891d"><!--do not collapse--></div>
                <div id="fc-bigArrow-fc6"><!--do not collapse--></div>
            </c:if>

            <div class="hd">
                <c:choose>
                    <c:when test="${isHomePage}">
                        <h3 id="find-title" class="title2bold-333">Start here: <span
                                class="title2-333">Find a school</span>
                        </h3>
                    </c:when>
                    <c:otherwise>
                        <h3 id="find-title" class="title2-333">Find a school</h3>
                    </c:otherwise>
                </c:choose>
                <!--<h3 class="title2bold">Start here: <span class="title2">Find a school</span></h3>-->
            </div>

            <div class="bd clearfix">
                <gsweb:form method="get"
                            action="/stateLauncher.page"
                            onsubmit="return findAndCompareCheck('q', 'splashStateSelector', 'p')">
                    <c:if test="${requestScope.context.cobrand == 'charterschoolratings'}">
                        <input type="hidden" name="st" value="charter"/>
                    </c:if>
                    <input name="p" id="p" type="hidden" value="search_single"/>
                    <input name="type" type="hidden" value="school"/>

                    <div class="line form">
                        <div class="unit size57of100 mrm">
                            <input type="text"
                                   value="Enter school, district, or city"
                                   name="q"
                                   id="q"
                                   class="text2"
                                   onfocus="textSwitch(this, '', 'Enter school, district, or city');"
                                   onblur="textSwitch(this, 'Enter school, district, or city', '');"/>
                        </div>

                        <div class="unit size18of100 mrs">
                            <gsweb:stateSelector usingLongNames="false"
                                                 state="${requestScope.context.state}"
                                                 useNoState="${not requestScope.context.hasSearched}"
                                                 styleId="splashStateSelector"
                                                 noStateLabel="--"/>
                        </div>

                        <div class="unit size25of100 lastUnit">
                            <button class="button-1"
                                    type="submit"
                                    onclick="s_objectID='splash_schools_go';">GO
                            </button>
                        </div>

                        <div class="spacer_15">
                            <div class="media formErrorText mtm" id="js-FASChooseState" style="display: none;">
                                <span class="sprite i-alert img mrs"><!-- do not collapse --></span>
                                <div class="bd">Please choose a state.</div>
                            </div>
                        </div>

                    </div>
                </gsweb:form>
            </div>
        </div>
    </div>

        <c:choose>
            <c:when test="${param.gradeLevels ne null}">
                <c:set var="gradeLevels" value="${param.gradeLevels}"/>
            </c:when>
            <c:otherwise>
                <c:choose>
                    <c:when test="${param.invalidZipCode eq null and not empty levelCode}">
                        <c:set var="gradeLevels" value="${levelCode}"/>
                    </c:when>
                    <c:otherwise>
                        <c:set var="gradeLevels" value="${null}"/>
                    </c:otherwise>
                </c:choose>
            </c:otherwise>
        </c:choose>
        <c:choose>
            <c:when test="${param.distance ne null}">
                <c:set var="distance" value="${param.distance}"/>
            </c:when>
            <c:otherwise>
                <c:set var="distance" value="5"/>
            </c:otherwise>
        </c:choose>
        <c:choose>
            <c:when test="${param.invalidZipCode ne null}">
                <c:set var="invalidZipCode" value="${param.invalidZipCode}"/>
            </c:when>
            <c:otherwise>
                <c:set var="invalidZipCode" value="false"/>
            </c:otherwise>
        </c:choose>

        <!--<p>invalidZipCode: <c:out value="${invalidZipCode}"/></p>-->
        <!--<p>distance: <c:out value="${distance}"/></p>-->
        <!--<p>gradeLevels: <c:out value="${gradeLevels}"/></p>-->
        <!--<p>param.invalidZipCode: <c:out value="${param.invalidZipCode}"/></p>-->
        <!--<p>param.distance: <c:out value="${param.distance}"/></p>-->
        <!--<p>param.gradeLevels: <c:out value="${param.gradeLevels}"/></p>-->
        <jsp:scriptlet>
            request.setAttribute("allGradeLevels", LevelCode.ALL_LEVELS.getIndividualLevelCodes());

            int[] allDistance = new int[]{1, 2, 3, 4, 5, 10, 15, 20, 25, 60};
            request.setAttribute("allDistance", allDistance);
        </jsp:scriptlet>
    <div class="mod findCompare">
        <div class="inner">
            <div class="hd pts">
                <h3 class="title2-333">Search for schools <span class="introText">near an address</span></h3>
            </div>
            <div class="bd">
                <form action="/search/search.page" id="jq-findByLocationForm" method="get" onsubmit="return submitByLocationSearch();">
                    <div class="line formExt1">
                        <label for="gradeLevels" class="introText unit">Show me:</label>
                        <select id="gradeLevels" class="unit size1of2 mhs" name="gradeLevels">
                            <c:choose>
                                <c:when test="${gradeLevels eq null}">
                                    <option value=""
                                            selected="selected">All schools
                                    </option>
                                </c:when>
                                <c:otherwise>
                                    <option value="">All schools</option>
                                </c:otherwise>
                            </c:choose>
                            <c:forEach var="gradeLevel" items="${allGradeLevels}">
                                <c:choose>
                                    <c:when test="${gradeLevel.name eq 'p'}">
                                        <c:set var="scrubbedGradeName" value="${gradeLevel.longName}s"/>
                                    </c:when>
                                    <c:otherwise>
                                        <c:set var="scrubbedGradeName" value="${gradeLevel.longName} schools"/>
                                    </c:otherwise>
                                </c:choose>
                                <c:choose>
                                    <c:when test="${gradeLevels eq gradeLevel.name}">
                                        <option value="${gradeLevel.name}"
                                                selected="selected">${scrubbedGradeName}</option>
                                    </c:when>
                                    <c:otherwise>
                                        <option value="${gradeLevel.name}">${scrubbedGradeName}</option>
                                    </c:otherwise>
                                </c:choose>
                            </c:forEach>
                        </select>
                        <label for="schoolRange" class="introText unit">within</label>

                        <div class="unit size1of20 lastUnit"><!-- do not collapse --></div>
                    </div>

                    <div class="line formExt2">
                        <select id="schoolRange" class="unit" name="distance">
                            <c:forEach var="aDistance" items="${allDistance}">
                                <c:choose>
                                    <c:when test="${distance eq aDistance}">
                                        <option value="${aDistance}" selected="selected">${aDistance}</option>
                                    </c:when>
                                    <c:otherwise>
                                        <option value="${aDistance}">${aDistance}</option>
                                    </c:otherwise>
                                </c:choose>
                            </c:forEach>
                        </select>
                        <label for="zipCode" class="introText unit mhs"> miles of </label>
                        <input type="text" value="Zip code" id="zipCode" class="unit size5of18 mls mrl text2"
                               name="locationSearchString"
                               onfocus="textSwitch(this, '', 'Zip code');"
                               onblur="textSwitch(this, 'Zip code', '');"/>
                        <!--<input type="hidden" name="redirectUrl" value="${nearbySearchRedirectUrl}"/>-->
                        <input type="hidden" name="lat"/>
                        <input type="hidden" name="lon"/>
                        <input type="hidden" name="state"/>
                        <input type="hidden" name="locationType" value=""/>
                        <input type="hidden" name="sortBy" value="DISTANCE"/>
                        <input type="hidden" name="normalizedAddress" value=""/>
                        <input type="hidden" name="totalResults" value="0"/>
                        <input type="hidden" name="city"/>
                        <input type="hidden" name="zipCode"/>
                        <button class="button-1 unit" type="submit">GO</button>
                        <div class="unit size1of20 lastUnit"><!-- do not collapse --></div>
                        <div class="spacer_5"><!-- do not collapse --></div>
                        <div class="spacer_15">
                            <!--<c:set var="invalidZipCode" value="${true}"/>-->
                            <div class="form-error formErrorText media" id="js-invalidZipCode" style="display: none;">
                                <span class="sprite i-alert img mrs"><!-- do not collapse --></span>

                                <div class="bd">Please enter a valid zip code.</div>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
        </div>
    </div>

</jsp:root>