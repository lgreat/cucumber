<?xml version="1.0" encoding="UTF-8"?>
<jsp:root
        xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0"
        xmlns="http://www.w3.org/1999/xhtml"
        xmlns:c="http://java.sun.com/jsp/jstl/core"
        xmlns:fn="http://java.sun.com/jsp/jstl/functions"
        xmlns:gsml="urn:jsptagdir:/WEB-INF/tags/gsml"
        >
    <jsp:directive.tag import="gs.data.school.LevelCode"/>
    <jsp:directive.tag import="java.util.Iterator"/>
    <jsp:directive.tag import="gs.data.util.Address"/>

    <jsp:directive.attribute name="key" required="false"
        description="The name to register the tracking data under (data will be stored in a hash). If not specified, data will be tracked on all tabs"/>
    <jsp:directive.attribute name="pageName" required="false" />
    <jsp:directive.attribute name="hier1" required="false" />
    <jsp:directive.attribute name="hasOsp" required="false" />
    <jsp:directive.attribute name="numberOfReviews" required="false" />
    <jsp:directive.attribute name="school" required="false" type="gs.data.school.School" />
    <jsp:directive.attribute name="schoolPhotosTracking" required="false" />
    <jsp:directive.attribute name="schoolGSRating" required="false" />
    <jsp:directive.attribute name="schoolType" description="public, private or charter" required="false" />
    <jsp:directive.attribute name="schoolLevel" description="p,e,m,h or combinations thereof -- but should actually be Preschool+Elementary+Middle+High or combinations thereof -- bug will be filed to deal with p,e,m,h in schoolResults.jspx and schoolsTable.jspx" required="false"/>
    <jsp:directive.attribute name="locale" description="could be county, city or metro somethingerother" required="false"/>


    <jsp:scriptlet>
        request.setAttribute("scheme", request.getScheme());
        if (null != school) {
            try {
                jspContext.setAttribute("id", school.getId().toString());
                jspContext.setAttribute("schoolType", school.getType().getSchoolTypeName());
                Address address = school.getPhysicalAddress();
                if (address != null) {
                    jspContext.setAttribute("locale", address.getCity());
                } else {
                    jspContext.setAttribute("locale", school.getCounty());
                }
                StringBuffer buffer = new StringBuffer(40);
                Iterator iter = school.getLevelCode().getIndividualLevelCodes().iterator();
                while (iter.hasNext()) {
                    buffer.append(((LevelCode.Level) iter.next()).getLongName());
                    if (iter.hasNext()) {
                        buffer.append("+");
                    }
                }
                schoolLevel = buffer.toString();
                jspContext.setAttribute("schoolLevel", schoolLevel);
            } catch (Exception e) {
            }
        }
    </jsp:scriptlet>



    <script type="text/javascript">
        GS.tracking.registerTrackingData("${not empty pageScope.key? pageScope.key : '_shared'}", {
            pageName : '${pageScope.pageName}',
            hierarchy : '${pageScope.hier1}',
            props: (function() {
                var locationAnchor = '';
                var prop9 = '';

                if (location.href &amp;&amp; location.href.indexOf('#from..') > -1) {
                    locationAnchor = location.href.substring(location.href.indexOf('#from..')+7);
                    prop9 = '${pageScope.pageName} ' + locationAnchor;
                } else {
                    prop9 = '${pageScope.pageName} ' + clickCapture.getProp(9);
                }

                // set props. Values that evaluate to empty string will be thrown out later
                var props =  {
                    prop2 : clickCapture.getProp(2,'${schoolType}'),
                    prop3 : clickCapture.getProp(3,'${schoolLevel}'),
                    prop4 : clickCapture.getProp(4,'${locale}'),
                    prop5 : clickCapture.getProp(5,"${not empty(requestScope.context.userHash) ?  'Registered' : empty(requestScope.context.nickname) ? 'Not logged in' : 'Logged in'}"),
                    prop6 : clickCapture.getProp(6,"${query}"),
                    prop8 : clickCapture.getProp(8,"${not empty param.cpn? param.cpn : pageScope.pageName}"),
                    prop10 : clickCapture.getProp(10,"${requestScope.context.screenName}"),
                    prop11 : clickCapture.getProp(11,"${community?'Community':'GreatSchools'}"),

                    prop31 : clickCapture.getProp(31,'${schoolGSRating}'),
                    prop34 : clickCapture.getProp(34,'${schoolPhotosTracking}'),

                    prop47 : clickCapture.getProp(63,'${pageScope.hasOsp}'), // TODO: get correct prop value
                    prop48 : clickCapture.getProp(64,"${pageScope.numberOfReviews}")
                };

                // if page name was not passed in, setting prop7 or prop9 here will overwrite prop9 with a potentially incorrect value
                if ('${pageScope.pageName}' !== '') {
                    props.prop9 = prop9;
                    props.prop7 = clickCapture.getProp(7,"${pageScope.pageName}:${requestScope.context.ABVersion}");
                }

                return props;
            })()
        });
    </script>

</jsp:root>