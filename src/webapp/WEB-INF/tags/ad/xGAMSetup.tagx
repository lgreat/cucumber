<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
          xmlns:gsweb="gstaglib">
    <jsp:directive.attribute name="hideDefaultAds" type="java.lang.Boolean" required="false"/>
    <jsp:directive.tag body-content="empty"
                       description="Generates necessary JavaScript to show the ads on a page. Generally you will not call this directly, but it will be called by the page decorator."/>
    <jsp:directive.tag import="gs.web.ads.AdPosition"/>
    <jsp:directive.tag import="gs.web.ads.AdTagHandler"/>
    <jsp:directive.tag import="gs.web.util.PageHelper"/>
    <jsp:directive.tag import="org.apache.commons.lang.StringUtils"/>
    <jsp:directive.tag import="org.apache.log4j.Logger"/>
    <jsp:directive.tag import="gs.web.util.UrlUtil"/>
    <jsp:directive.tag import="gs.web.util.context.SessionContextUtil"/>
    <jsp:directive.tag import="gs.web.util.CookieUtil"/>
    <jsp:directive.tag import="gs.web.util.context.SessionContext"/>
    <jsp:directive.tag import="java.util.*"/>
    <jsp:directive.tag import="gs.web.util.AdUtil"/>

    <jsp:scriptlet><![CDATA[
        PageHelper pageHelper = (PageHelper) request.getAttribute(PageHelper.REQUEST_ATTRIBUTE_NAME);
        Logger _log = Logger.getLogger("xGAMsetup.tagx");
        // GS-12415 map for getting width and height of ad
        Map<String,AdPosition> adNameAdPositionMap = new HashMap<String,AdPosition>();
        if (null != pageHelper) {
            List<String> adNames = new ArrayList<String>();
            Set adPositions = pageHelper.getAdPositions();
            String slotPrefix = (String) request.getAttribute(AdTagHandler.REQUEST_ATTRIBUTE_SLOT_PREFIX_NAME);

            if (StringUtils.isEmpty(slotPrefix)) {
                if (!"interstitial".equals(pageHelper.getPageName())
                        && !"error500".equals(pageHelper.getPageName())) {
                    _log.warn("Setting ad slot with empty prefix: " + request.getRequestURL() + "; " + pageHelper.getPageName());
                    slotPrefix = "";
                }
            }

            if (hideDefaultAds == null || !hideDefaultAds.booleanValue()) {
                if (pageHelper.isShowingFooterAd()) {
                    if (request.getRequestURI() != null && request.getRequestURI().equals("/index.page")) {
                        AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, AdPosition.Homepage_Footer_728x90, slotPrefix, true);
                    } else {
                        AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, AdPosition.Footer_728x90, slotPrefix, true);
                    }
                }

                if (pageHelper.isShowingBannerAd() && pageHelper.isShowingLeaderboard()) {
                    AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, AdPosition.Header_728x90, slotPrefix, true);
                }

                if (!pageHelper.isAdFree() && !pageHelper.isFramed() && !pageHelper.isAdServedByCobrand()) {
                    AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, AdPosition.Global_NavPromo_968x30, slotPrefix, false);
                    AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, AdPosition.Global_HeaderPromo_88x31, slotPrefix, false);
                    AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, AdPosition.Custom_Peelback_Ad, slotPrefix, false);
                    AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, AdPosition.Custom_Welcome_Ad, slotPrefix, false);
                }
            }

            for (Iterator iter = adPositions.iterator(); iter.hasNext();) {
                AdPosition ad = (AdPosition) iter.next();
                if (ad.isGAMPosition()) {
                    if (StringUtils.isEmpty(slotPrefix)) {
                        slotPrefix = "";
                        _log.warn(">empty prefix for: " + ad.getName());
                    }
                    AdUtil.adPositionAdNameHelper(adNameAdPositionMap, adNames, ad, slotPrefix, true);
                }
            }

            if (UrlUtil.isDevEnvironment(request.getServerName())) {
                pageHelper.addAdKeyword("env", "dev");
            }

            if (!pageHelper.hasAdKeyword("template")) {
                // "run of site" is the default value if no other code has already set it,
                // e.g. in a controller. note that setting this in a jspx or tagx file
                // which gets processed after xGAMSetup.tagx will still work because
                // adding a non-multi value replaces any existing one
                pageHelper.addAdKeyword("template","ros");
            }

            SessionContext sessionContext = SessionContextUtil.getSessionContext(request);
            if (sessionContext != null) {
                if (sessionContext.getCobrand() != null) {
                    pageHelper.addAdKeyword("cobrand", "true");
                    pageHelper.addAdKeyword("cobrandName", sessionContext.getCobrand());
                }

                if (sessionContext.getMemberId() != null) {
                    pageHelper.addAdKeyword("member", "true");
                }

                // GS-12370 add GAM ad attribute so that GAM ad targeting can be set up to serve to usera, userb, userc, etc.
                pageHelper.addAdKeywordMulti("editorial", "user" + sessionContext.getABVersion());
            }

            if (CookieUtil.hasCookie(request, "pledged")) {
                pageHelper.addAdKeyword("pledge", "true");
            }

            request.setAttribute("GAMadNames", adNames);
            request.setAttribute("GAMadKeywords", pageHelper.getAdKeywords());
            request.setAttribute("GAMadSenseHint", pageHelper.getAdSenseHint());
            // GS-12415
            request.setAttribute("GPTadNameAdPositionMap", adNameAdPositionMap);
        }
        ]]></jsp:scriptlet>

    <c:choose>
    <c:when test="${requestScope.context.gptEnabled}">
        <c:choose>
            <c:when test="${requestScope.context.gptAsynchronousModeEnabled}">
                <![CDATA[
                <script type="text/javascript">
                    var googletag = googletag || {};
                    googletag.cmd = googletag.cmd || [];
                    (function() {
                        var gads = document.createElement('script');
                        gads.async = true;
                        gads.type = 'text/javascript';
                        var useSSL = 'https:' == document.location.protocol;
                        gads.src = (useSSL ? 'https:' : 'http:') +
                                '//www.googletagservices.com/tag/js/gpt.js';
                        var node = document.getElementsByTagName('script')[0];
                        node.parentNode.insertBefore(gads, node);
                    })();
                </script>
                ]]>
            </c:when>
            <c:otherwise>
                <![CDATA[
                <script type="text/javascript">
                  (function() {
                    var useSSL = 'https:' == document.location.protocol;
                    var src = (useSSL ? 'https:' : 'http:') +       '//www.googletagservices.com/tag/js/gpt.js';
                    document.write('<scr' + 'ipt src="' + src + '"></scr' + 'ipt>');
                  })();
                </script>
                ]]>
            </c:otherwise>
        </c:choose>

        <![CDATA[
        <script type="text/javascript">
        ]]>

        <c:if test="${requestScope.context.gptAsynchronousModeEnabled}">
        <![CDATA[
            googletag.cmd.push(function() {
        ]]>
        </c:if>

            <c:forEach var="slotName" items="${GAMadNames}">
                <c:set var="adPosition" value="${GPTadNameAdPositionMap[slotName]}"/>
                googletag.defineSlot('/1002894/${slotName}', <c:choose>
                    <c:when test="${fn:length(adPosition.sizes) > 1}">[<c:forEach var="size" items="${adPosition.sizes}" varStatus="status">[${size.width},${size.height}]<c:if test="${!status.last}">, </c:if></c:forEach>]</c:when>
                    <c:otherwise>[${adPosition.size.width},${adPosition.size.height}]</c:otherwise>
                </c:choose>, 'gpt${slotName}')
                    .addService(googletag.pubads());
            </c:forEach>

            <c:forEach var="keywordEntry" items="${GAMadKeywords}">
                googletag.pubads().setTargeting("${keywordEntry.key}", <c:choose>
                      <c:when test="${fn:length(keywordEntry.value) == 1}">"${keywordEntry.value[0]}"</c:when>
                      <c:otherwise>[<c:forEach var="keywordValue" items="${keywordEntry.value}" varStatus="status">"${keywordValue}"<c:if test="${!status.last}">,</c:if></c:forEach>]</c:otherwise>
                  </c:choose>);
            </c:forEach>

            <![CDATA[
                googletag.pubads().collapseEmptyDivs();
                googletag.pubads().enableSingleRequest();
            ]]>
            <c:if test="${!requestScope.context.gptAsynchronousModeEnabled}">
                googletag.pubads().enableSyncRendering();
            </c:if>
            <![CDATA[
                googletag.enableServices();
            ]]>

            <c:if test="${requestScope.context.gptAsynchronousModeEnabled}">
            <![CDATA[
                });
            ]]>
            </c:if>
        <![CDATA[
        </script>
        ]]>
    </c:when>
    <c:otherwise>
        <jsp:scriptlet>
            /*
            Explanation of compfilter attribute from Sera:

            We can use the compfilter for a couple of different things. One is to make
            sure competing ads don't appear on the same page - i.e. we make Concerta a
            "1" and Adderall a "2" so that Concerta only appears when "1" is displayed
            and Adderall only appears when a "2" is displayed and thus they never
            appear together.

            Another way we use this is for companion ads - i.e. we exclusively set the
            Concerta banner, sky and box all to display every time a "2" is shown so
            that the ads always show together.

            We can also use the exclusive feature to rig share of voice, as "1" ought
            to appear approximately 25% of the time.
            */
            /*
             Google Ad Manager Tagging Guide:
             https://www.google.com/admanager/help/en_US/tips/tagging.html
             */
        </jsp:scriptlet>
        <c:if test="${!requestScope.pageHelper.adFree and !empty GAMadNames}">
            <![CDATA[<script type="text/javascript" src="http://partner.googleadservices.com/gampad/google_service.js"></script>]]>
            <script type="text/javascript">                 
              GS_googleAddAdSenseService("ca-pub-9662012843341888");
              GS_googleEnableAllServices();
            </script>
            <![CDATA[<script type="text/javascript">
            <!--]]>
            <c:forEach var="keywordEntry" items="${GAMadKeywords}">
                <c:forEach var="keywordValue" items="${keywordEntry.value}">
                    GA_googleAddAttr('${keywordEntry.key}','${keywordValue}');
                </c:forEach>
            </c:forEach>
            GA_googleAddAttr('compfilter','${gsweb:randomNumber(4)+1}');
            <![CDATA[
            -->
            </script>
            ]]>
            <![CDATA[<script type="text/javascript">
            <!--]]>
            <c:forEach var="slotName" items="${GAMadNames}">
                GA_googleAddSlot("ca-pub-9662012843341888", '${slotName}');</c:forEach>
            <!-- Implemented for GS-7089, commented out for GS-7451: -->
            <!-- c:if test="${not empty GAMadSenseHint}">
                <c:forEach var="slotName" items="${GAMadNames}">
                    GA_googleAddAdSenseSlotAttr('${slotName}','google_hints','${GAMadSenseHint}');
                </c:forEach>
            </c:if -->            
            <![CDATA[
            -->
            </script>
            ]]>
            <script type="text/javascript">
                GA_googleUseSyncSRARendering();
                GA_googleFetchAds();
            </script>
        </c:if>
    </c:otherwise>
    </c:choose>
</jsp:root>