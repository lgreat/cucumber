<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
          xmlns:pageHelper="urn:jsptagdir:/WEB-INF/tags/pageHelper"
          xmlns:gsml="urn:jsptagdir:/WEB-INF/tags/gsml"
          xmlns:link="urn:www.greatschools.org/taglib/link"
          xmlns:map="urn:jsptagdir:/WEB-INF/tags/map"
        >

    <jsp:directive.tag body-content="empty" description="Draw a map of a school with nearby schools marked and extra info in a bubble."/>
    <jsp:directive.attribute name="id" required="true" description="XML id of the Html div element that holds the map."/>
    <jsp:directive.attribute name="school" required="true" type="gs.data.school.School" description="The school this map is centered on"/>
    <jsp:directive.attribute name="schools" required="true" description="Schools to map" type="java.util.Collection"/>
    <jsp:directive.attribute name="tooltips" required="false" description="Use tooltips?"/>
    <jsp:directive.attribute name="minZoom" required="false" type="java.lang.Integer" description="Minimum google zoom to start with, defaults to 9"/>
    <jsp:directive.attribute name="maxZoom" required="false" type="java.lang.Integer" description="Maximum google zoom to start with, defaults to 12"/>
    <jsp:directive.attribute name="start" required="false" type="java.lang.Integer" description="Used for paging. Which neighbor in list to start with."/>
    <jsp:directive.attribute name="count" required="false" type="java.lang.Integer" description="AKA page size. Number of pinpoints to display on map. Default all." />
    <jsp:directive.attribute name="gsRating" required="true" type="java.lang.Integer" description="The GreatSchools rating of the school the map is centered on." />
    <jsp:directive.attribute name="ratings" type="gs.data.school.review.Ratings" required="true" description="An instance of Ratings" />
    <jsp:directive.tag import="gs.data.admin.cobrand.Cobrand"/>
    <jsp:directive.tag import="gs.data.admin.cobrand.ICobrandDao"/>
    <jsp:directive.tag import="org.apache.commons.lang.StringUtils"/>
    <jsp:directive.tag import="org.apache.commons.logging.LogFactory"/>
    <jsp:directive.tag import="org.springframework.context.ApplicationContext"/>
    <jsp:directive.tag import="org.springframework.web.context.support.WebApplicationContextUtils"/>
    <jsp:directive.tag import="gs.web.util.context.SessionContext"/>

<jsp:scriptlet>
            ApplicationContext ac =
                    WebApplicationContextUtils.getWebApplicationContext(application);
            ICobrandDao dao = (ICobrandDao) ac.getBean(ICobrandDao.BEAN_ID);
            String serverName = request.getServerName();

            // GS-6354 remove typo-ed trailing dot from server name before looking up
            if (serverName.endsWith(".")) {
                SessionContext context = (SessionContext) request.getAttribute(SessionContext.REQUEST_ATTRIBUTE_NAME);
                serverName = StringUtils.chomp(serverName, ".");
                // http://cpickslay.office.greatschools.org./city/Alameda/CA?cpn=123
                String uri = "http://" + serverName + context.getOriginalRequestURI();
                if (StringUtils.isNotEmpty(request.getQueryString())) {
                    uri = uri + "?" + request.getQueryString();
                }
                response.sendRedirect(uri);
            }

            Cobrand c = dao.getCobrandByHostname(serverName);
            if (c == null) {
                LogFactory.getLog("GoogleMappingApi").error("Unable to find key for server name " +
                        serverName);
            } else {
                request.setAttribute("key", c.getGoogleMapsKey());
            }
    </jsp:scriptlet>
    <pageHelper:externalJavascript file="http://maps.google.com/maps/api/js?sensor=false&amp;key=${requestScope.key}"/>
    <pageHelper:externalJavascript file="/res/js/map/schoolMap.js" />

    <c:choose>
        <c:when test="${school.levelCode == 'p'}">
            <c:set var="schoolType" value="$preschool"/>
        </c:when>
        <c:when test="${school.type.schoolTypeName == 'private'}">
            <c:set var="schoolType" value="private" />
        </c:when>
        <c:otherwise>
            <c:set var="schoolType" value="" />
        </c:otherwise>
    </c:choose>

    <c:set var="schoolName" value="${fn:replace(school.name, '\'', '\\\'')}"/>

    <!-- Iterate over all the center school's nearby schools and generate a javascript block that will add the markers
         for each nearby school -->
    <c:set var="javascript" value=""/>
    <c:forEach var ="nearbySchool" items = "${schools}" begin="${start}" end="${start+count-1}">
        <c:set var="curSchool" value="${nearbySchool.neighbor}"/>
        <c:set var="schoolName" value="${fn:replace(curSchool.name, '\'', '\\\'')}"/>

        <c:choose>
            <c:when test="${curSchool.levelCode == 'p'}">
                <c:set var="schoolType" value="preschool"/>
            </c:when>
            <c:when test="${curSchool.type.schoolTypeName == 'private'}">
                <c:set var="schoolType" value="private" />
            </c:when>
            <c:otherwise>
                <c:set var="schoolType" value="" />
            </c:otherwise>
        </c:choose>

        <c:set var="javascript">
            ${javascript}
            GS.map.schoolMap.createAndAddMarker('${curSchool.id}','${curSchool.databaseState}','${schoolName}','${curSchool.lat}','${curSchool.lon}','${nearbySchool.rating}', '', markerClickedCallback, '${schoolType}');
        </c:set>
    </c:forEach>


    <script type="text/javascript">

        jQuery(function(){
            GS.map.schoolMap = new GS.map.SchoolMap('${id}','${school.lat}','${school.lon}', false);
            GS.map.schoolMap.setup();
            GS.map.schoolMap.createAndAddCenterMarker('${school.id}','${school.databaseState}','${schoolName}','${school.lat}','', markerClickedCallback);

            <![CDATA[
            <!--
            ]]>
            ${javascript}
            -->

            google.maps.event.addListenerOnce(GS.map.schoolMap.getMap(), 'tilesloaded', function() {
                GS.map.schoolMap.drawMarkers();
                GS.map.schoolMap.expandMapToFitMarkers();
            });
        });

    </script>


</jsp:root>