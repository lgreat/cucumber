<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
          xmlns:pageHelper="urn:jsptagdir:/WEB-INF/tags/pageHelper"
          xmlns:gsml="urn:jsptagdir:/WEB-INF/tags/gsml"
          xmlns:map="urn:jsptagdir:/WEB-INF/tags/map"
        >
<jsp:directive.tag import="gs.data.geo.LatLonRect"/>
<jsp:directive.tag import="gs.data.geo.LatLon"/>
<jsp:directive.tag import="java.util.List"/>
<jsp:directive.tag import="java.util.ArrayList"/>
<jsp:directive.tag import="gs.data.school.School"/>
<jsp:directive.tag import="gs.web.util.UrlBuilder"/>
<jsp:directive.tag import="gs.data.search.SchoolSearchResult"/>
<jsp:directive.tag body-content="empty" description="Draw a map of schools." />
<jsp:directive.attribute name="id" required="true" description="XML id of the Html div element that holds the map."/>
<jsp:directive.attribute name="lon" required="false" type="java.lang.Float" description="Longitude (center of map)"/>
<jsp:directive.attribute name="lat" required="false" type="java.lang.Float" description="Latitude (center of map)"/>
<jsp:directive.attribute name="schools" required="true" description="Schools to map" type="java.util.List"/>
<jsp:directive.attribute name="tooltips" required="false" description="Use tooltips?" />
<jsp:directive.attribute name="bubbles" required="false" description="Use Google's standard thought bubbles" />
<jsp:directive.attribute name="centerSchool" required="false" type="gs.data.school.School" description="If provided, centers map on school and places star marker"/>
<jsp:directive.attribute name="minZoom" required="false" type="java.lang.Integer" description="Minimum google zoom, defaults to 9"/>
<jsp:directive.attribute name="maxZoom" required="false" type="java.lang.Integer" description="Maximum google zoom, defaults to 12"/>
<!--
Schools without lat/lon are skipped.
-->
<jsp:scriptlet><![CDATA[

    // Transform SchoolSearchResults to Schools if necessary
    if (schools.size() > 0 && schools.get(0) instanceof SchoolSearchResult) {
        List<School> schoolList = new ArrayList<School>();
        for (Object school : schools) {
            schoolList.add(((SchoolSearchResult) school).getSchool());
        }
        request.setAttribute("mapSchools", schoolList);
    } else {
        request.setAttribute("mapSchools", schools);
    }

    if (centerSchool != null && centerSchool.getLat() != null && centerSchool.getLon() != null) {
        // if requested to center on a school, do so
        // note if school has no latlon then map is centered around nearby schools instead
        request.setAttribute("center", new LatLon(centerSchool.getLat(), centerSchool.getLon()));
    } else {
        // otherwise calculate the optimal center point
        LatLonRect r = new LatLonRect(schools);
        if (r.isCentered()) {
            request.setAttribute("center", r.getCenter());
        } else if (lat != null && lon != null) {
            request.setAttribute("center", new LatLon(lat, lon));
        }
    }

    ]]></jsp:scriptlet>
<c:if test="${!requestScope.context.crawler}">
    <map:setup/>

    <pageHelper:addOnLoadHandler handler="doMapSchools()"/>
    <script type="text/javascript">
        function extendBoundsToCenterOnPoint(point, bounds) {
            bounds.extend(reflectPoint(point, bounds.getNorthEast()));
            bounds.extend(reflectPoint(point, bounds.getSouthWest()));
        }

        // Given points x (outlier) and y (center), returns point z such that the rectangle defined by
        // x and z has its center at y. Returns a GLatLng object
        function reflectPoint(centerPoint, outlierPoint) {
            return new google.maps.LatLng(centerPoint.lat() + (centerPoint.lat() - outlierPoint.lat()),
                    centerPoint.lng() + (centerPoint.lng() - outlierPoint.lng()));
        }

        var minZoom = ${not empty minZoom?minZoom:6};
        var maxZoom = ${not empty maxZoom?maxZoom:13};
        var displayTooltips = ${not empty tooltips};
        var useBubbles = ${not empty bubbles};
        var centerOnStar = ${not empty centerSchool};
        var centerPoint = new google.maps.LatLng(${center.lat}, ${center.lon});
        var schoolArray = new Array();
        var infoWindow = new google.maps.InfoWindow();
        var GS_map;
        var infoBoxInstance = null;
        var newMarkers = new Array();

        var deleteMarkers = function() {
            for(var i = 0; i &lt; newMarkers.length; i++) {
                newMarkers[i].setMap(null);
            }
            newMarkers = new Array();
        }

        function initSchoolInfo() {
            deleteMarkers();
            var mySchool;

        <c:forEach var="school" items="${mapSchools}">
                    <c:if test="${not empty school.lon}">
                    <jsp:useBean id="school" type="gs.data.school.School" />
                    <jsp:scriptlet><![CDATA[
            UrlBuilder urlBuilder = new UrlBuilder(school, UrlBuilder.SCHOOL_PROFILE);
            request.setAttribute("schoolUrl", urlBuilder.asFullUrlXml(request));
            ]]></jsp:scriptlet>
            mySchool = new Object();
            mySchool.link = "${schoolUrl}";
            mySchool.name = "${school.name}";
            mySchool.location = new google.maps.LatLng(${school.lat},${school.lon});
        <c:if test="${not empty bubbles}">
                // only for bubbles, accessing enrollment requires an extra DB query per school
                <![CDATA[
                    mySchool.info = "<br />${school.gradeLevels}, ${school.type.name}";
            mySchool.enrollment = ${not empty school.enrollment?school.enrollment:0};
            mySchool.stInfo = "";
            if (mySchool.enrollment > 0) {
                mySchool.stInfo = "<br />" + mySchool.enrollment + " students";
            }
            ]]>
        </c:if>
            schoolArray.push(mySchool);
        </c:if>
            </c:forEach>
        }

        function initMap() {
            var i = 0;
            var tooltip = null;

            var mapOptions = {
                center: centerPoint,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                disableDefaultUI: true,
                zoom: maxZoom,
                zoomControl: true,
                zoomControlOptions: {
                    style: google.maps.ZoomControlStyle.DEFAULT //may have to be set to SMALL - map.addControl(new GSmallMapControl());
                },
                streetViewControl: false,
                panControl: true,
                infoWindow: infoWindow
            };

            GS_map = new google.maps.Map(document.getElementById("${id}"), mapOptions);
            document.getElementById("${id}").style.overflow = "hidden";

            var marker;
            var markerShape = {
                coord: [1, 0, 27, 0, 27, 32, 1, 32],
                type: 'poly'
            };

            var bounds = new google.maps.LatLngBounds();
            bounds.extend(centerPoint);

            <![CDATA[
            for (var counter=0; counter < schoolArray.length; counter++) {
                var curSchool = schoolArray[counter];
                if (displayTooltips) {
                    tooltip = curSchool.name;
                } else {
                    tooltip = null;
                }

                var markerOptions = {
                    map: GS_map,
                    shape: markerShape,
                    position: curSchool.location,
                    title: tooltip ,
                    infoWindowMarkup: '<div style="font-size:small;width: 200px;height: 20px"><a href="' + curSchool.link + '">'
                            + curSchool.name + '</a>' + curSchool.info + curSchool.stInfo + '</div>'
                };
                //                    marker = new GMarker(curSchool.location, {title: tooltip});
                marker = new google.maps.Marker(markerOptions);
                //                    map.addOverlay(marker);
                bounds.extend(curSchool.location);
                newMarkers.push(marker);

                infoBoxInstance = new google.maps.InfoWindow();
                google.maps.event.addListener(marker, "click", (function(marker) {
                    return function() {
                        if (useBubbles) {
                            infoBoxInstance.setContent(marker.infoWindowMarkup);
                            infoBoxInstance.open(GS_map, marker);

                            if (s.tl && s.pageName != undefined) {
                                s.tl(true, 'o', 'Map_pin_click_' + s.pageName);
                            }
                        } else {
                            if (s.tl && s.pageName != undefined) {
                                s.tl(this, 'o', 'Map_pin_click_' + s.pageName);
                            }
                            document.location = curSchool.link;
                        }
                    }
                })(marker));
            }

            ]]>
            if (centerOnStar) {
                //                    var starIcon = new GIcon();
                //                    starIcon.image = "/res/img/school/overview/star.gif";
                //                    starIcon.iconSize = new GSize(26,25);
                //                    starIcon.iconAnchor = new GPoint(13,12);
                // for the purposes of stack order, the star marker is treated as if it is
                // just north of the equator. This effectively makes it always on top of any
                // markers placed in the United States
                //                    function fakeLatitudeAtEquatorOrder(marker, b) {
                //                        return GOverlay.getZIndex(1.0);
                //                    }
                if (displayTooltips) {
                    tooltip = "${centerSchool.name}";
                } else {
                    tooltip = null;
                }
                var markerOptions = {
                    map: GS_map,
                    title: tooltip,
                    position: centerPoint,
                    icon: new google.maps.MarkerImage(
                            '/res/img/school/overview/star.gif', // url
                            new google.maps.Size(26, 25), // size
                            null, // origin
                            new google.maps.Point(13, 12) // anchor
                    )
                };
                //                    marker = new GMarker(centerPoint, {icon:starIcon, zIndexProcess: fakeLatitudeAtEquatorOrder, title: tooltip});
                //                    map.addOverlay(marker);
                marker = new google.maps.Marker(markerOptions);
                marker.setZIndex(89999); //http://mymonkeydo.com/converting-google-maps-v2-to-v3/
                extendBoundsToCenterOnPoint(centerPoint, bounds);
            }
            //                var zoom = map.getBoundsZoomLevel(bounds);
            var zoom = GS_map.getZoom();
            if (zoom > maxZoom) zoom = maxZoom;
            if (minZoom > zoom) zoom = minZoom;
            GS_map.setZoom(zoom);
        }

        function doMapSchools() {
            initSchoolInfo();
            initMap();
        }
    </script>
</c:if>
</jsp:root>