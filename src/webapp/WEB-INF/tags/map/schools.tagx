<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
          xmlns:pageHelper="urn:jsptagdir:/WEB-INF/tags/pageHelper"
          xmlns:gsml="urn:jsptagdir:/WEB-INF/tags/gsml"
        >
<jsp:directive.tag import="gs.data.geo.LatLonRect"/>
<jsp:directive.tag import="gs.data.geo.LatLon"/>
<jsp:directive.tag body-content="empty"
                   description="Draw a map of schools." />
<jsp:directive.attribute name="functionName" required="true" description="Name of the javascript function. Caller must call this in the onload handler."/>
<jsp:directive.attribute name="id" required="true" description="XML id of the Html div element that holds the map."/>
<jsp:directive.attribute name="lon" required="false" type="java.lang.Float" description="Longitude (center of map)"/>
<jsp:directive.attribute name="lat" required="false" type="java.lang.Float" description="Latitude (center of map)"/>
<jsp:directive.attribute name="schools" required="true" description="Schools to map" type="java.util.Collection"/>
<jsp:directive.attribute name="tooltips" required="false" description="Use tooltips?" />
<jsp:directive.attribute name="bubbles" required="false" description="Use Google's standard thought bubbles" />
<jsp:directive.attribute name="centerSchool" required="false" type="gs.data.school.School" description="If provided, centers map on school and places star marker"/>
<!--
NOTES
The map API must be previously initialized.
Schools without lat/lon are skipped.

TODO
I'd like to color the markers or use different icons depending on the level code. (The
   beginnings of this are here.)
I'd like to use a consistent display of school information in the info window.
-->
<pageHelper:externalJavascript file="/res/js/mapTooltips.js" />
<jsp:scriptlet>
<![CDATA[
    if (centerSchool != null && centerSchool.getLat() != null && centerSchool.getLon() != null) {
        // if requested to center on a school, do so
        // note if school has no latlong then map is centered around nearby schools instead
        request.setAttribute("center", new LatLon(centerSchool.getLat().floatValue(), centerSchool.getLon().floatValue()));
    } else {
        // otherwise calculate the optimal center point
        LatLonRect r = new LatLonRect(schools);
        if (r.isCentered()) {
            request.setAttribute("center", r.getCenter());
        } else {
            request.setAttribute("center", new LatLon(lat.floatValue(), lon.floatValue()));
        }
    }
]]>
</jsp:scriptlet>
<script type="text/javascript">
<![CDATA[
<!--
function addBubble(m, link, name, schInfo, stInfo) {
  GEvent.addListener(m, "click", function() {
    var s = '<div style="font-size:small;width: 200px;height: 20px"><a href="' + link + '">' + name + '</a>' +
            schInfo + stInfo + '</div>'
    m.openInfoWindowHtml(s);
  });
};
]]>

function extendBoundsToCenterOnPoint(point, bounds) {
  bounds.extend(reflectPoint(point, bounds.getNorthEast()));
  bounds.extend(reflectPoint(point, bounds.getSouthWest()));
}

// Given points x (outlier) and y (center), returns point z such that the rectangle defined by
// x and z has its center at y. Returns a GLatLng object
function reflectPoint(centerPoint, outlierPoint) {
  return new GLatLng(centerPoint.lat() + (centerPoint.lat() - outlierPoint.lat()),
                     centerPoint.lng() + (centerPoint.lng() - outlierPoint.lng()));
}

var displayTooltips = ${not empty tooltips};
var useBubbles = ${not empty bubbles};
var centerOnStar = ${not empty centerSchool};
var centerPoint = new GLatLng(${center.lat}, ${center.lon});
var schoolArray = new Array();
function initSchoolInfo() {
    var mySchool;
<c:forEach var="school" items="${schools}">
  // School info for ${school.name}
  <c:if test="${not empty school.lon}">
    <c:choose>
      <c:when test="${'private' == school.type.schoolTypeName}">
        <gsml:url var="hrefbase"
                  value="/cgi-bin/${school.databaseState.abbreviationLowerCase}/private/${school.id}"/>
      </c:when>
      <c:otherwise>
        <gsml:url var="hrefbase"
                  value="/modperl/browse_school/${school.databaseState.abbreviationLowerCase}/${school.id}"/>
      </c:otherwise>
    </c:choose>
    mySchool = new Object();
    mySchool.link = "${hrefbase}";
    mySchool.name = "${fn:escapeXml(school.name)}";
    mySchool.location = new GLatLng(${school.lat},${school.lon});
    <c:if test="${not empty bubbles}">
      // only for bubbles, accessing enrollment requires an extra DB query per school
      <![CDATA[
      mySchool.info = "<br />${school.gradeLevels}, ${school.type.name}";
      mySchool.enrollment = ${not empty school.enrollment?school.enrollment:0};
      mySchool.stInfo = "";
      if (mySchool.enrollment > 0) {
        mySchool.stInfo = "<br />" + mySchool.enrollment + " students";
      }
      ]]>
    </c:if>
    schoolArray.push(mySchool);
  </c:if>
</c:forEach>
}

function initMap() {
    var i = 0;
    map = new GMap2(document.getElementById("${id}"));

    if (displayTooltips) {
      gTooltip = document.createElement("div");
      map.getPane(G_MAP_FLOAT_PANE).appendChild(gTooltip);
      gTooltip.style.visibility = "hidden";
    }
    map.addControl(new GSmallMapControl());
    map.setCenter(centerPoint, 17);
    var bounds = new GLatLngBounds();
    bounds.extend(centerPoint);
    <![CDATA[
    for (var counter=0; counter < schoolArray.length; counter++) {
      var curSchool = schoolArray[counter];
      marker = new GMarker(curSchool.location);
      map.addOverlay(marker);
      bounds.extend(curSchool.location);
      gMarkers[i++] = marker;
      if (displayTooltips) {
        setTooltipOnMarker(marker,'<span style="white-space:nowrap">' + curSchool.name + '</span>');
      }
      if (useBubbles) {
        addBubble(marker, curSchool.link, curSchool.name, curSchool.info, curSchool.stInfo);
      } else {
        GEvent.addListener(marker, "click", function() { location = curSchool.link; });
      }
    }
    ]]>
    if (centerOnStar) {
      var icon = new GIcon();
      icon.image = "/res/img/school/overview/star.gif";
      icon.iconSize = new GSize(26,25);
      icon.iconAnchor = new GPoint(13,12);
      marker = new GMarker(centerPoint, icon);
      map.addOverlay(marker);
      extendBoundsToCenterOnPoint(centerPoint, bounds);
      var schoolName = "${fn:escapeXml(centerSchool.name)}";
      <![CDATA[
      setTooltipOnMarker(marker, '<span style="white-space:nowrap">' + schoolName + '</span>');
      ]]>
      gMarkers[i++] = marker;
    }
    var zoom = map.getBoundsZoomLevel(bounds);
    if (zoom > 12) zoom = 12;
    if (9 > zoom) zoom = 9;
    map.setZoom(zoom);
}

function ${functionName}() {
  if (GBrowserIsCompatible()) {
      initSchoolInfo();
      initMap();
  }
}
-->
</script>

</jsp:root>