<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:fn="http://java.sun.com/jsp/jstl/functions"
          xmlns:pageHelper="urn:jsptagdir:/WEB-INF/tags/pageHelper"
          xmlns:gsml="urn:jsptagdir:/WEB-INF/tags/gsml"
          xmlns:map="urn:jsptagdir:/WEB-INF/tags/map"
          xmlns:link="urn:www.greatschools.net/taglib/link"
        >
<!-- Created for GS-7643 School Search Widget -->
<jsp:directive.tag import="gs.data.geo.LatLonRect"/>
<jsp:directive.tag import="gs.data.geo.LatLon"/>
<jsp:directive.tag body-content="empty"
                   description="Draw a map of schools." />
<jsp:directive.attribute name="id" required="true" description="XML id of the Html div element that holds the map."/>
<jsp:directive.attribute name="lon" required="false" type="java.lang.Float" description="Longitude (center of map)"/>
<jsp:directive.attribute name="lat" required="false" type="java.lang.Float" description="Latitude (center of map)"/>
<jsp:directive.attribute name="schools" required="false" description="Schools to map, as SchoolWithRatings objects" type="java.util.List"/>
<jsp:directive.attribute name="minZoom" required="false" type="java.lang.Integer" description="Minimum google zoom, defaults to 9"/>
<jsp:directive.attribute name="maxZoom" required="false" type="java.lang.Integer" description="Maximum google zoom, defaults to 12"/>
<jsp:directive.attribute name="s_cid" required="false" type="java.lang.String" description="Optional s_cid campaign tracking code to append to links"/>
<!--
Schools without lat/lon are skipped.
-->
<jsp:scriptlet><![CDATA[

    request.setAttribute("mapSchools", schools);

    if (lat != null && lon != null) {
        request.setAttribute("centerOnStar", true);
        request.setAttribute("center", new LatLon(lat, lon));
    } else {
        request.setAttribute("centerOnStar", false);
        // Calculate the optimal center point
        if (schools != null) {
            LatLonRect r = new LatLonRect(schools);
            if (r.isCentered()) {
                request.setAttribute("center", r.getCenter());
            } else {
                request.setAttribute("center", new LatLon(lat, lon));
            }
        } else {
            request.setAttribute("center", new LatLon(lat, lon));
        }
    }
    ]]></jsp:scriptlet>
<c:if test="${!requestScope.context.crawler}">
<map:setup/>
<pageHelper:addOnLoadHandler handler="GS_doMapSchoolsWithRatings()"/>
<script type="text/javascript">
<![CDATA[
<!--
]]>

function extendBoundsToCenterOnPoint(point, bounds) {
  bounds.extend(reflectPoint(point, bounds.getNorthEast()));
  bounds.extend(reflectPoint(point, bounds.getSouthWest()));
}

// Given points x (outlier) and y (center), returns point z such that the rectangle defined by
// x and z has its center at y. Returns a GLatLng object
function reflectPoint(centerPoint, outlierPoint) {
  return new GLatLng(centerPoint.lat() + (centerPoint.lat() - outlierPoint.lat()),
                     centerPoint.lng() + (centerPoint.lng() - outlierPoint.lng()));
}

var minZoom = ${not empty minZoom?minZoom:6};
var maxZoom = ${not empty maxZoom?maxZoom:13};
var displayTooltips = true;
var useBubbles = true;
var centerOnStar = ${centerOnStar};
var centerPoint = new GLatLng(${center.lat}, ${center.lon});
var schoolArray = new Array();

function initSchoolInfo() {
    var mySchool;
    var schoolRatingImg;
<c:forEach var="schoolWithRatings" items="${mapSchools}">
  <c:set var="curSchool" value="${schoolWithRatings.school}"/>
  <c:if test="${not empty curSchool.lon}">
    <c:choose>
      <c:when test="${'private' == curSchool.type.schoolTypeName}">
        <gsml:url var="hrefbase"
                  value="/cgi-bin/${curSchool.databaseState.abbreviationLowerCase}/private/${curSchool.id}"/>
      </c:when>
      <c:otherwise>
        <gsml:url var="hrefbase"
                  value="/modperl/browse_school/${curSchool.databaseState.abbreviationLowerCase}/${curSchool.id}"/>
      </c:otherwise>
    </c:choose>

    mySchool = new Object();

    mySchool.name = "${curSchool.name}";
    mySchool.link = "${hrefbase}";
    <c:if test="${s_cid ne null and s_cid > ''}">
    mySchool.link += "?s_cid=${s_cid}";
    </c:if>
    mySchool.street = "${curSchool.physicalAddress.street}";
    mySchool.city = "${curSchool.physicalAddress.city}";
    mySchool.state = "${curSchool.physicalAddress.state.abbreviation}";
    mySchool.zip = "${curSchool.physicalAddress.zip}";
    mySchool.phone = '<c:if test="${not empty curSchool.phone}">${curSchool.phone}</c:if>';
    mySchool.address = mySchool.street + ' ' + mySchool.city + ', ' + mySchool.state + ' ' + mySchool.zip;
    mySchool.levelCode = "${curSchool.levelCode}";
    mySchool.type = "${curSchool.type.name}";
    mySchool.gradeLevel = "${curSchool.gradeLevels}";

    mySchool.rating = 0;
    mySchool.ratingHtml = '';
    <c:if test="${schoolWithRatings.rating ne null and schoolWithRatings.rating gt 0 and schoolWithRatings.rating lt 11}">
        schoolRatingImg = '<gsml:img src="/res/img/map/ratings_gs_map_${schoolWithRatings.rating}.gif" alt="GreatSchools Rating: ${schoolWithRatings.rating} out of 10. Greatschools Ratings are based on test results. 10 is best."/>';

        mySchool.ratingHtml = '<div class="schoolRating"><div>GreatSchools Rating</div>' +
                           schoolRatingImg +
                           '</div>';
        mySchool.rating = ${schoolWithRatings.rating};
    </c:if>
    mySchool.parentRatingHtml = '<div class="parentRating">';
    <c:set var="parent_rating" value="0"/>
    <c:if test="${(schoolWithRatings.parentRatings ne null) and (schoolWithRatings.parentRatings.displayOverallRating eq true)}">
        <c:set var="parent_rating" value="${schoolWithRatings.parentRatings.overall}"/>
    </c:if>
    <c:choose>
       <c:when test="${parent_rating eq 0}">
            mySchool.parentRatingHtml += '<link:schoolProfileAddParentReview
                    onclick="window.open(this.href + \'&amp;showName=1\', \'map\', \'width=344,height=362,scrollbars=no\'); return false;"
                    school="${curSchool}"><img src="/res/img/school/ratings/ratings_parent_head_no.gif" alt="Be the first to rate!" onmouseover="this.src=\\'/res/img/school/ratings/ratings_parent_head_no_roll.gif\\'" onmouseout="this.src=\\'/res/img/school/ratings/ratings_parent_head_no.gif\\'"/></link:schoolProfileAddParentReview>';
       </c:when>
       <c:otherwise>
            mySchool.parentRatingHtml += '<div>Parent Rating</div>'
            mySchool.parentRatingHtml += '<gsml:img src="/res/img/map/ratings_parent_city_${parent_rating}.gif" alt="Parent rating ${parent_rating}"/>';
       </c:otherwise>

    </c:choose>

    mySchool.parentRatingHtml += '</div>';

    mySchool.location = new GLatLng(${curSchool.lat},${curSchool.lon});
    schoolArray.push(mySchool);
  </c:if>
</c:forEach>
}

var GS_map;
var GS_map_zoomControl;
// Below this height, use extreme measures to try and keep info window visible
var GS_smallHeight = 275;

var needsExtraZoom = true;

function initMap() {
    var tooltip = null;
    GS_map = new GMap2(document.getElementById("${id}"));
    document.getElementById("${id}").style.overflow = "hidden";
    var marker;

    GS_map_zoomControl = new GSmallZoomControl();
    GS_map.addControl(GS_map_zoomControl);
    
    GS_map.setCenter(centerPoint, 17);
    var bounds = new GLatLngBounds();
    bounds.extend(centerPoint);
    var zoom = maxZoom;
    <![CDATA[
    if (schoolArray.length > 0) {
        for (var counter=0; counter < schoolArray.length; counter++) {
            var curSchool = schoolArray[counter];
            var icon = new GIcon();
            var imageValue = curSchool.rating;
            if (imageValue == 0) {
                if (curSchool.levelCode == 'p') {
                    imageValue = 'preschool';
                } else if (curSchool.type == 'private') {
                    imageValue = 'private';
                } else {
                    imageValue = 'na';
                }
            }
            icon.image = "/res/img/map/GS_gsr_" + imageValue + "_forground.png";
            icon.shadow =  "/res/img/map/GS_gsr_1_backgroundshadow.png";
            icon.transparent = "/res/img/map/GS_gsr_" + imageValue + "_trans.png";
            icon.iconSize = new GSize(42,41);
            icon.iconAnchor = new GPoint(14,39);
            icon.infoWindowAnchor = new GPoint(21,2);
            icon.infoShadowAnchor = new GPoint(21,2);
            icon.shadowSize = new GSize(42,41);
            tooltip = curSchool.name;
            marker = new GMarker(curSchool.location, {icon: icon, title: tooltip});
            addBubbleListener(marker, curSchool);
            GS_map.addOverlay(marker);
            bounds.extend(curSchool.location);
        }
    }
    ]]>

    if (centerOnStar) {
        addCenterPoint(GS_map, centerPoint);
        extendBoundsToCenterOnPoint(centerPoint, bounds);
    }

    var zoom = GS_map.getBoundsZoomLevel(bounds);
    if (zoom > maxZoom) zoom = maxZoom;
    if (minZoom > zoom) zoom = minZoom;
    GS_map.setZoom(zoom);

    if (GS_map.getSize().height &lt; GS_smallHeight) {
        GEvent.addListener(GS_map, "infowindowopen", function() {
            GS_map.removeControl(GS_map_zoomControl);
            needsExtraZoom = true;
        });
        GEvent.addListener(GS_map, "infowindowbeforeclose", function() {
            GS_map.addControl(GS_map_zoomControl);
            needsExtraZoom = false;
        });
        GEvent.addListener(GS_map, "moveend", function() {
            if (needsExtraZoom) {
                window.setTimeout(panUpABit, 100);
            }
        });
    }
}

function panUpABit() {
    GS_map.panDirection(0,0.3);
    needsExtraZoom = false;
}

function addBubbleListener(marker, school) {
  GEvent.addListener(marker, "click", function() {
      if (GS_map.getSize().height &lt; GS_smallHeight) {
        GS_map.removeControl(GS_map_zoomControl);
      }
      marker.openInfoWindowHtml(getSchoolInfoWindowHtml(school));
  });
}

function addCenterPoint(GS_map, centerPoint) {
    var arrowIcon = new GIcon();
    arrowIcon.image = "/res/img/map/green_arrow.png";
    arrowIcon.shadow = "/res/img/map/green_arrow_shadow.png";
    arrowIcon.transparent = "/res/img/map/green_arrow_transparent.png";
    arrowIcon.iconSize = new GSize(39, 34);
    arrowIcon.iconAnchor = new GPoint(11, 34);
    arrowIcon.infoWindowAnchor = new GPoint(13, 2);
    arrowIcon.infoShadowAnchor = new GPoint(13, 2);
    arrowIcon.shadowSize = new GSize(39, 34);
    tooltip = null;
    // for the purposes of stack order, the star marker is treated as if it is
    // just north of the equator. This effectively makes it always on top of any
    // markers placed in the United States
    function fakeLatitudeAtEquatorOrder(marker, b) {
      return GOverlay.getZIndex(1.0);
    }
    marker = new GMarker(centerPoint, {icon:arrowIcon, zIndexProcess: fakeLatitudeAtEquatorOrder, title: tooltip});
    GS_map.addOverlay(marker);
}

function clearMarkers() {
    GS_map.clearOverlays();
}

<![CDATA[
function getSchoolInfoWindowHtml(school) {
    var height = 85; // default height
    var heightMultiplier = Math.floor(school.name.length / 30);
    // add 13 pixels (font line-height) for every multiple of 30 that the school name's length exceeds
    // this is a guesstimate of how many chars it takes to wrap to the next line
    height += heightMultiplier * 13;

    var rval = '<div class="schoolInfoWindow" style="font: 11px/13px Trebuchet MS, Arial, sans-serif; height: ' + height + 'px; width: 240px;">';
    rval += '<div class="schoolName" style="width: 210px;"><a href="' + school.link + '" target="_blank">'+ school.name + '</a></div>';
    rval += '<div class="schoolRatings">';
    rval += school.ratingHtml;
    rval += school.parentRatingHtml;
    rval += '</div>';
    rval += '<div class="schoolInfo">';
    rval += '<div class="typeGrade">';
    if (school.levelCode == 'p') {
        rval += 'Preschool';
    } else {
        rval += school.type + ', ' + school.gradeLevel;
    }
    rval += '</div>';
    rval += '<address>';
    rval += school.street + '<br />';
    rval += school.city + ', ' + school.state + ' ' + school.zip + '<br/>';
    rval += '</address>';
    if (school.phone == '') {
        rval += '<br/>';
    } else {
        rval += '<p class="schoolPhone">' + school.phone + '</p>';
    }
    rval += '</div>'; // schoolInfo
    rval += '</div>'; // schoolInfoWindow
    return rval;
}
]]>

function GS_doMapSchoolsWithRatings() {
  if (GBrowserIsCompatible()) {
      initSchoolInfo();
      initMap();
  }
}
-->
</script>
</c:if>
</jsp:root>