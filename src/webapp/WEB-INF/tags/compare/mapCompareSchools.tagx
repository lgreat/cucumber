<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:ratings="urn:jsptagdir:/WEB-INF/tags/ratings"
          xmlns:pageHelper="urn:jsptagdir:/WEB-INF/tags/pageHelper"
        >
    <jsp:directive.tag body-content="scriptless"/>

    <jsp:directive.attribute name="mapCenter"
                             required="true"
                             type="gs.data.geo.LatLon"
                             description="Center of map"/>
    <jsp:directive.attribute name="schools"
                             required="true"
                             type="java.util.List"
                             description="Schools to map, as a list of gs.web.compare.ComparedSchoolBaseStruct"/>

    <pageHelper:externalJavascript
            file="http://maps.googleapis.com/maps/api/js?client=gme-greatschoolsinc&amp;sensor=false&amp;signature=OXbNRPWooYBwVYP50cQjzvgBk1k="/>

    <!-- These functions are NOT globally scoped. DO NOT attempt to reference them elsewhere. -->
    <script type="text/javascript">
    (function(){
        var GS_compareMapInfoWindow;
        var GS_compareMapObject;
        var GS_compareMapMarkers = {};
        var GS_compareMapCurrentOpenSchool;

        function GS_initializeCompareMap() {
            var latlng = new google.maps.LatLng(${mapCenter.lat}, ${mapCenter.lon});
            var myOptions = {
                zoom: 12,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP

            };
            GS_compareMapObject = new google.maps.Map(document.getElementById("compareMap"), myOptions);

            var preSelect;
            var centerPoint = null;
            var markerShadow = new google.maps.MarkerImage(
                    "/res/img/map/GS_gsr_1_backgroundshadow.png", // url
                    new google.maps.Size(42, 41), // size
                    new google.maps.Point(0, 0), // origin
                    new google.maps.Point(14, 39) // anchor
                    );
            // shape defines clickable region of icon as a series of points
            // coordinates increase in the X direction to the right and in the Y direction down.
            var markerShape = {
                coord: [0, 0, 30, 0, 30, 37, 0, 37],
                type: 'poly'
            };
            var markerOptions = {
                map: GS_compareMapObject,
                shadow: markerShadow,
                shape: markerShape
            };
            var bounds = new google.maps.LatLngBounds();
            var numSchools = 0;
            GS_compareMapInfoWindow = new google.maps.InfoWindow();
            google.maps.event.addListener(GS_compareMapInfoWindow, 'closeclick', function() {
                GS_resetCompareMapRows();
                GS_compareMapCurrentOpenSchool = null;
            });
            bounds.extend(latlng);
            <c:forEach var="school" items="${schools}">
                <ratings:ratingsMapPinUrl school="${school.school}"/>
                preSelect = ${(school.selected)?'true':'false'};
                markerOptions.position = new google.maps.LatLng(${school.latLon.lat}, ${school.latLon.lon});
                markerOptions.title = "${school.name}";
                if (preSelect) {
                    centerPoint = markerOptions.position;
                }
                GS_addMarker(GS_compareMapObject, bounds, markerOptions, "${mapPinUrl}", '${school.uniqueIdentifier}', preSelect);
                numSchools++;
            </c:forEach>
            if (numSchools > 1) {
                GS_compareMapObject.fitBounds(bounds);
            }

            if (centerPoint != null) {
                GS_compareMapObject.panTo(centerPoint);
            }
        }

        function GS_addMarker(map, bounds, options, markerImageUrl, schoolIdentifier, preSelect) {
            options.icon = new google.maps.MarkerImage(
                    markerImageUrl, // url
                    new google.maps.Size(30, 41), // size
                    new google.maps.Point(0, 0), // origin
                    new google.maps.Point(14, 39) // anchor
                    );
            var marker = new google.maps.Marker(options);
            GS_compareMapMarkers[schoolIdentifier] = marker;
            bounds.extend(options.position);
            google.maps.event.addListener(marker, 'click', function() {
                if (s.tl &amp;&amp; s.pageName != undefined) {
                    s.tl(true, 'o', 'Map_pin_click_' + s.pageName);
                }
                var infowindowElement = jQuery('#mapBubble_' + schoolIdentifier);

                GS_highlightCompareMapRowFromPin(schoolIdentifier);

                GS_compareMapInfoWindow.setContent(
                        '<div style="width:325px;">'+infowindowElement.html()+'</div>'
                        );
                GS_compareMapCurrentOpenSchool = schoolIdentifier;
                GS_compareMapInfoWindow.open(map, marker);
            });
            if (preSelect) {
                jQuery(function() {
                    var infowindowElement = jQuery('#mapBubble_' + schoolIdentifier);
                    GS_compareMapInfoWindow.setContent('<div style="width:325px;">'+infowindowElement.html()+'</div>');
                    GS_compareMapInfoWindow.open(map, marker);
                    GS_compareMapCurrentOpenSchool = schoolIdentifier;
                });
                GS_highlightCompareMapRowFromPin(schoolIdentifier);
            }
        }

        jQuery('.js-mouseover-open-bubble').mouseover(function() {
            var id = jQuery(this).attr('id');
            GS_highlightCompareMapRow(this);
            var schoolIdentifier = id.replace('school-listitem-', '');
            if (GS_compareMapCurrentOpenSchool == schoolIdentifier) {
                // if window is already open on this school, do nothing
                return;
            }
            var marker = GS_compareMapMarkers[schoolIdentifier];
            if (marker) {
                GS_compareMapCurrentOpenSchool = schoolIdentifier;
                var infowindowElement = jQuery('#mapBubble_' + schoolIdentifier);
                GS_compareMapInfoWindow.setContent(
                        '<div style="width:325px;">' + infowindowElement.html() + '</div>'
                        );
                GS_compareMapInfoWindow.open(GS_compareMapObject, marker);
            }
        });

        function GS_highlightCompareMapRow(listItemElement) {
            //debug(listItemElement);
            GS_resetCompareMapRows();

            // set mouseovered list item sprite icons to blue background color
            var isWhite = null;
            var patternBlueClassMarker = /_b/gi;
            var communityRatingToHighlight = jQuery(listItemElement).find('.communityRating .sprite');
            var gsRatingToHighlight = jQuery(listItemElement).find('.gsRating .sprite');
            var communityRatingToHighlightClass = communityRatingToHighlight.attr('class');
            var gsRatingToHighlightClass = gsRatingToHighlight.attr('class');

            (communityRatingToHighlightClass.match(patternBlueClassMarker) === null) ? isWhite = true : isWhite = false;

            if(isWhite){
                var blueCommunityRatingClass = communityRatingToHighlightClass + '_b';
                var blueGsRatingClass = gsRatingToHighlightClass + '_b';
                communityRatingToHighlight.removeClass(communityRatingToHighlightClass).addClass(blueCommunityRatingClass);
                gsRatingToHighlight.removeClass(gsRatingToHighlightClass).addClass(blueGsRatingClass);
            }

            // set appropriate list item background color
            jQuery(listItemElement).addClass('highlight');
        }

        function GS_highlightCompareMapRowFromPin(schoolIdentifier) {
            GS_resetCompareMapRows();
            //debug(schoolIdentifier);

            var isWhite = null;
            var patternBlueClassMarker = /_b/gi;
            var communityRatingToHighlight = jQuery('#school-listitem-' + schoolIdentifier).find('.communityRating .sprite');
            var gsRatingToHighlight = jQuery('#school-listitem-' + schoolIdentifier).find('.gsRating .sprite');
            var communityRatingToHighlightClass = communityRatingToHighlight.attr('class');
            var gsRatingToHighlightClass = gsRatingToHighlight.attr('class');

            (communityRatingToHighlightClass.match(patternBlueClassMarker) === null) ? isWhite = true : isWhite = false;

            if(isWhite){
                var blueCommunityRatingClass = communityRatingToHighlightClass + '_b';
                var blueGsRatingClass = gsRatingToHighlightClass + '_b';
                communityRatingToHighlight.removeClass(communityRatingToHighlightClass).addClass(blueCommunityRatingClass);
                gsRatingToHighlight.removeClass(gsRatingToHighlightClass).addClass(blueGsRatingClass);
            }

            jQuery('#school-listitem-' + schoolIdentifier).addClass('highlight');
        }

        function GS_resetCompareMapRows() {
            jQuery('.js-mouseover-open-bubble').removeClass('highlight');
            // reset all sprite icons to white background color
            jQuery('.communityRating .sprite').each(function() {
                var patternWhiteCommunityRating = /sprite stars_sm_(\d|[a-z_]{7})/gi;
                var communityRatingClass = jQuery(this).attr('class');
                var whiteCommunityRatingClass = communityRatingClass.match(patternWhiteCommunityRating)[0];
                jQuery(this).removeClass(communityRatingClass).addClass(whiteCommunityRatingClass);
            });
            jQuery('.gsRating .sprite').each(function() {
                var patternWhiteGsRating = /sprite badge_sm_(\d{1,2}|[a-z]{2})/gi;
                var gsRatingClass = jQuery(this).attr('class');
                var whiteGsRatingClass = gsRatingClass.match(patternWhiteGsRating)[0];
                jQuery(this).removeClass(gsRatingClass).addClass(whiteGsRatingClass);
            });
        }

        GS_initializeCompareMap();
    }());
    </script>
</jsp:root>
