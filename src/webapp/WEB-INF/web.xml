<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>GSWeb</display-name>

    <!--    <filter>-->
    <!--        <filter-name>hibernateFilter</filter-name>-->
    <!--        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>-->
    <!--    </filter>-->
    <!-- -->
    <!--    <filter-mapping>-->
    <!--        <url-pattern>*.page</url-pattern>-->
    <!--        <filter-name>hibernateFilter</filter-name>-->
    <!--    </filter-mapping>-->

    <!--
      - Loads the root application context of this web app at startup,
      - by default from "/WEB-INF/applicationContext.xml".
        - Note that it is preferable to use ContextLoaderListener in a servlet container
        - that follows the Servlet 2.4 initialization order (most Servlet 2.3 containers do).
        -
      - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
      - to access it anywhere in the web application, outside of the framework.
      -
      - The root context is the parent of all servlet-specific contexts.
      - This means that its beans are automatically available in these child contexts,
      - both for getBean(name) calls and (external) bean references.
        -->
    <servlet>
        <servlet-name>context</servlet-name>
        <servlet-class>gs.web.util.GsContextLoaderServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--
      - Location of the XML file that defines the root application context.
      - Applied by ContextLoaderServlet.
      -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/applicationContext.xml
        </param-value>
    </context-param>

    <servlet>
        <servlet-name>pages</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>


    <servlet-mapping>
        <servlet-name>pages</servlet-name>
        <url-pattern>*.page</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>pages</servlet-name>
        <url-pattern>/city/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>modules</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>modules</servlet-name>
        <url-pattern>*.module</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>gwt</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>-1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>gs.web.admin.gwt.TableCopy TableCopyService</servlet-name>
        <servlet-class>gs.web.admin.gwt.server.TableCopyServiceImpl</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>gwt</servlet-name>
        <url-pattern>/res/gwt/gs.web.admin.gwt.TableCopyGWTPanel/services/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.page</welcome-file>
    </welcome-file-list>


    <filter>
        <filter-name>httpcacheheader</filter-name>
        <filter-class>gs.web.util.HttpHeaderFilter</filter-class>
        <init-param>
            <param-name>Cache-Control</param-name>
            <param-value>max-age=3600</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>disablejsessionid</filter-name>
        <filter-class>gs.web.util.DisableUrlSessionFilter</filter-class>
    </filter>

    <filter>
        <filter-name>opensessioninview</filter-name>
        <filter-class>gs.web.util.OpenSessionInViewFilter</filter-class>
    </filter>

    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
        <!--<init-param>-->
        <!--<param-name>debug.pagewriter</param-name>-->
        <!--<param-value>true</param-value>-->
        <!--</init-param>-->
    </filter>


    <filter-mapping>
        <filter-name>httpcacheheader</filter-name>
        <url-pattern>/res/*</url-pattern>
    </filter-mapping>

    <!-- Disable JSESSIONID url rewriting -->
    <filter-mapping>
        <filter-name>disablejsessionid</filter-name>
        <url-pattern>*.page</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>disablejsessionid</filter-name>
        <url-pattern>/city/*</url-pattern>
    </filter-mapping>
    <!-- End Sitemesh -->

    <!-- OSIV should come before the sitemesh filter so that it wraps sitemesh -->
    <filter-mapping>
        <filter-name>opensessioninview</filter-name>
        <url-pattern>*.page</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <!-- We want this to run for error pages also! -->
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>opensessioninview</filter-name>
        <url-pattern>/city/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <!-- We want this to run for error pages also! -->
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>
    <!-- End OSIV -->

    <!-- Sitemesh -->
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>*.page</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/city/*</url-pattern>
    </filter-mapping>
    <!-- End Sitemesh -->

    <filter-mapping>
        <filter-name>httpcacheheader</filter-name>
        <url-pattern>/gsFooter.page</url-pattern>
    </filter-mapping>
    
    <jsp-config>
        <jsp-property-group>
            <url-pattern>*.jspx</url-pattern>
            <is-xml>true</is-xml>
        </jsp-property-group>
    </jsp-config>


    <!--
        Cleanup code to help release resources so hot-redeploys work better
         http://opensource2.atlassian.com/confluence/spring/pages/viewpage.action?pageId=2669
    -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <listener>
        <listener-class>gs.web.util.UndeployCleanupListener</listener-class>
    </listener>


    <error-page>
        <error-code>500</error-code>
        <location>/status/error500.page</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/status/error404.page</location>
    </error-page>
</web-app>
